(undo-tree-save-format-version . 1)
"647410e78e6200fffcd523bc89a9574cd7125bdc"
[nil nil nil nil (26363 61578 178218 365000) 0 nil]
([nil nil ((477 . 483) (t 26363 17558 114848 208000)) nil (26363 61578 178217 606000) 0 nil])
([nil nil ((483 . 484)) nil (26363 61578 178217 63000) 0 nil])
([nil nil ((484 . 487)) nil (26363 61578 178216 677000) 0 nil])
([nil nil ((487 . 488)) nil (26363 61578 178216 272000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -487) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 488) nil (26363 61578 178215 588000) 0 nil])
([nil nil ((487 . 492)) nil (26363 61578 178213 997000) 0 nil])
([nil nil ((#("1" 0 1 (face py-number-face fontified t)) . -491) (undo-tree-id118 . -1) 492) nil (26363 61578 178213 314000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 490) (undo-tree-id117 . -1) 491) nil (26363 61578 178212 388000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -489) (undo-tree-id116 . -1) 490) nil (26363 61578 178211 446000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 488) (undo-tree-id115 . -1) 489) nil (26363 61578 178210 316000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -485) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("a" 0 1 (fontified t)) . -486) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("d" 0 1 (fontified t)) . -487) (undo-tree-id114 . -1) 488) nil (26363 61578 178208 846000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 484) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 485) nil (26363 61578 178204 332000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -479) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("o" 0 1 (fontified t)) . -480) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("o" 0 1 (fontified t)) . -481) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("l" 0 1 (face py-builtins-face fontified t)) . -482) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#(":" 0 1 (fontified t)) . -483) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 484) nil (26363 61578 178201 318000) 0 nil])
([nil nil ((479 . 482)) nil (26363 61578 178106 917000) 0 nil])
([nil nil ((482 . 483)) nil (26363 61578 178106 508000) 0 nil])
([nil nil ((483 . 491)) nil (26363 61578 178106 6000) 0 nil])
([nil nil ((491 . 492)) nil (26363 61578 178105 587000) 0 nil])
([nil nil ((#("1" 0 1 (face py-number-face fontified t)) . -491) (undo-tree-id89 . -1) 492) nil (26363 61578 178104 893000) 0 nil])
([nil nil ((491 . 492)) nil (26363 61578 178104 14000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -491) (undo-tree-id88 . -1) 492) nil (26363 61578 178103 501000) 0 nil])
([nil nil ((491 . 492)) nil (26363 61578 178102 375000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -491) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 492) nil (26363 61578 178101 718000) 0 nil])
([nil nil ((491 . 496)) nil (26363 61578 178100 180000) 0 nil])
([nil nil ((491 . 496) (#("fal" 0 3 (fontified nil)) . -491) (491 . 494) (#("False" 0 5 (fontified nil)) . -491) (491 . 496) (#("false" 0 5 (fontified t)) . -491) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) 496) nil (26363 61578 178099 309000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -551) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("e" 0 1 (fontified t)) . -552) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("t" 0 1 (fontified t)) . -553) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("u" 0 1 (fontified t)) . -554) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("r" 0 1 (fontified t)) . -555) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("n" 0 1 (fontified t)) . -556) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (fontified nil)) . 557) (557 . 558) (#(" " 0 1 (fontified t)) . 557) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 558) nil (26363 61578 178096 228000) 0 nil])
([nil nil ((551 . 557)) nil (26363 61578 178084 602000) 0 nil])
([nil nil ((557 . 558)) nil (26363 61578 178084 194000) 0 nil])
([nil nil ((560 . 572) (#("            " 0 12 (fontified nil)) . 559) (undo-tree-id60 . -12) (558 . 572)) nil (26363 61578 178083 582000) 0 nil])
([nil nil ((559 . 571)) nil (26363 61578 178082 706000) 0 nil])
([nil nil ((571 . 574)) nil (26363 61578 178082 113000) 0 nil])
([nil nil ((574 . 587)) nil (26363 61578 178081 620000) 0 nil])
([nil nil ((587 . 591)) nil (26363 61578 178081 209000) 0 nil])
([nil nil ((591 . 592)) nil (26363 61578 178080 791000) 0 nil])
([nil nil ((575 . 583) (#("            " 0 12 (fontified t)) . 575) 592) nil (26363 61578 178080 33000) 0 nil])
([nil nil ((589 . 597) (#("            " 0 12 (fontified t)) . 589) (undo-tree-id59 . -8) 597) nil (26363 61578 178079 134000) 0 nil])
([nil nil ((589 . 593) (#("        " 0 8 (fontified t)) . 589) (undo-tree-id58 . -8) 597) nil (26363 61578 178077 584000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 589) (undo-tree-id57 . -4) 593) nil (26363 61578 178076 98000) 0 nil])
([nil nil ((589 . 601)) nil (26363 61578 178075 80000) 0 nil])
([nil nil ((601 . 608)) nil (26363 61578 178074 651000) 0 nil])
([nil nil ((628 . 640) (#("        " 0 8 (fontified t)) . 628) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) 636) nil (26363 61578 178073 804000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 636) (undo-tree-id52 . -4) 640) nil (26363 61578 178071 393000) 0 nil])
([nil nil ((636 . 642)) nil (26363 61578 178070 415000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -636) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("e" 0 1 (fontified t)) . -637) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("t" 0 1 (fontified t)) . -638) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("u" 0 1 (fontified t)) . -639) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("r" 0 1 (fontified t)) . -640) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -641) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 642) nil (26363 61578 178069 82000) 0 nil])
([nil nil ((636 . 647)) nil (26363 61578 178059 324000) 0 nil])
([nil nil ((643 . 647) (#("gri" 0 3 (fontified nil)) . -643) (643 . 646) (#("grid" 0 4 (fontified t)) . -643) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) 647) nil (26363 61578 178058 272000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -571) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("." 0 1 (fontified t)) . -572) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("." 0 1 (fontified t)) . -573) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 574) nil (26363 61578 178055 923000) 0 nil])
([nil nil ((571 . 582)) nil (26363 61578 178051 260000) 0 nil])
([nil nil ((#("1" 0 1 (face py-number-face fontified t)) . -581) (undo-tree-id24 . -1) 582) nil (26363 61578 178050 497000) 0 nil])
([nil nil ((581 . 582)) nil (26363 61578 178049 576000) 0 nil])
([nil nil ((582 . 595)) nil (26363 61578 178049 155000) 0 nil])
([nil nil ((595 . 616)) nil (26363 61578 178048 731000) 0 nil])
([nil nil ((616 . 621)) nil (26363 61578 178048 305000) 0 nil])
([nil nil ((621 . 634)) nil (26363 61578 178047 721000) 0 nil])
([nil nil ((634 . 640)) nil (26363 61578 178047 330000) 0 nil])
([nil nil ((640 . 641)) nil (26363 61578 178046 928000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -640) (undo-tree-id23 . -1) 641) nil (26363 61578 178046 392000) 0 nil])
([nil nil ((640 . 641)) nil (26363 61578 178045 351000) 0 nil])
([nil nil ((641 . 642)) nil (26363 61578 178044 954000) 0 nil])
([nil nil ((642 . 646)) nil (26363 61578 178044 412000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 645) (undo-tree-id22 . -1) 646) nil (26363 61578 178043 882000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -644) (undo-tree-id21 . -1) 645) nil (26363 61578 178042 859000) 0 nil])
([nil nil ((644 . 648)) nil (26363 61578 178041 793000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -646) (undo-tree-id19 . -1) (#("`" 0 1 (fontified t)) . -647) (undo-tree-id20 . -1) 648) nil (26363 61578 178041 286000) 0 nil])
([nil nil ((646 . 648)) nil (26363 61578 178039 978000) 0 nil])
([nil nil ((648 . 661)) nil (26363 61578 178039 412000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 657) (undo-tree-id18 . -4) 661) nil (26363 61578 178038 602000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 653) (undo-tree-id17 . -4) 657) nil (26363 61578 178037 313000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -649) (undo-tree-id16 . -4) 653) nil (26363 61578 178036 51000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -647) (undo-tree-id14 . -1) (#("
" 0 1 (fontified t)) . -648) (undo-tree-id15 . -1) 649) nil (26363 61578 178034 707000) 0 nil])
([nil nil ((647 . 648)) nil (26363 61578 178032 994000) 0 nil])
([nil nil ((648 . 661)) nil (26363 61578 178032 262000) 0 nil])
([nil nil ((661 . 662)) nil (26363 61578 178031 670000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -661) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 662) nil (26363 61578 178030 690000) 0 nil])
([nil nil ((661 . 666)) nil (26363 61578 178028 875000) 0 nil])
([nil nil ((666 . 667)) nil (26363 61578 178028 495000) 0 nil])
([nil nil ((667 . 669)) nil (26363 61578 178028 35000) 0 nil])
([nil nil ((#("1" 0 1 (face py-number-face fontified t)) . -668) (undo-tree-id10 . -1) 669) nil (26363 61578 178027 487000) 0 nil])
([nil nil ((668 . 675)) nil (26363 61578 178026 395000) 0 nil])
([nil nil ((675 . 688)) nil (26363 61578 178025 812000) 0 nil])
([nil nil ((688 . 693)) nil (26363 61578 178025 139000) 0 nil])
([nil nil ((693 . 694)) nil (26363 61578 178024 186000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -693) (undo-tree-id9 . -1) 694) nil (26363 61578 178023 141000) 0 nil])
([nil nil ((693 . 699)) nil (26363 61578 178021 755000) 0 nil])
([nil nil ((699 . 700)) nil (26363 61578 178021 68000) 0 nil])
([nil nil ((700 . 706)) nil (26363 61578 178020 317000) 0 nil])
([nil nil ((706 . 719)) nil (26363 61578 178019 558000) 0 nil])
([nil nil ((719 . 727)) nil (26363 61578 178018 886000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -724) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("i" 0 1 (fontified t)) . -725) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t)) . -726) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 727) nil (26363 61578 178017 57000) 0 nil])
([nil nil ((724 . 725)) nil (26363 61578 177991 422000) 0 nil])
([nil nil ((725 . 737)) nil (26363 61578 177987 645000) 0 nil])
([nil nil ((226 . 230) (t 26363 61578 301509 163000)) nil (26363 61587 123103 886000) 0 nil])
([nil nil ((226 . 230) (#("tru" 0 3 (fontified nil)) . -226) (226 . 229) (#("True" 0 4 (fontified nil)) . -226) (226 . 230) (#("true" 0 4 (fontified t)) . -226) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) 230) nil (26363 61587 123099 937000) 0 nil])
([nil nil ((#("        if pad:
            dim = dim+2
            grid = np.zeros((dim,dim))
            grid[0,:] = -1
            grid[:,0] = -1
            grid[dim-1,:] = -1
            grid[:,dim-1] = -1
        else:" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 16 (fontified t) 16 28 (fontified t) 28 31 (face py-variable-name-face fontified t) 31 32 (fontified t) 32 33 (face font-lock-operator-face fontified t) 33 38 (fontified t) 38 39 (face py-number-face fontified t) 39 40 (fontified t) 40 52 (fontified t) 52 56 (face py-variable-name-face fontified t) 56 57 (fontified t) 57 58 (face font-lock-operator-face fontified t) 58 67 (fontified t) 67 68 (face (rainbow-delimiters-depth-1-face) fontified t) 68 69 (face (rainbow-delimiters-depth-2-face) fontified t) 69 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 78 (face (rainbow-delimiters-depth-1-face) fontified t) 78 79 (fontified t) 79 91 (fontified t) 91 95 (face py-variable-name-face fontified t) 95 96 (face (rainbow-delimiters-depth-1-face) fontified t) 96 97 (face py-number-face fontified t) 97 99 (fontified t) 99 100 (face (rainbow-delimiters-depth-1-face) fontified t) 100 101 (fontified t) 101 102 (face font-lock-operator-face fontified t) 102 104 (fontified t) 104 105 (face py-number-face fontified t) 105 106 (fontified t) 106 118 (fontified t) 118 122 (face py-variable-name-face fontified t) 122 123 (face (rainbow-delimiters-depth-1-face) fontified t) 123 125 (fontified t) 125 126 (face py-number-face fontified t) 126 127 (face (rainbow-delimiters-depth-1-face) fontified t) 127 128 (fontified t) 128 129 (face font-lock-operator-face fontified t) 129 131 (fontified t) 131 132 (face py-number-face fontified t) 132 133 (fontified t) 133 145 (fontified t) 145 149 (face py-variable-name-face fontified t) 149 150 (face (rainbow-delimiters-depth-1-face) fontified t) 150 154 (fontified t) 154 155 (face py-number-face fontified t) 155 157 (fontified t) 157 158 (face (rainbow-delimiters-depth-1-face) fontified t) 158 159 (fontified t) 159 160 (face font-lock-operator-face fontified t) 160 162 (fontified t) 162 163 (face py-number-face fontified t) 163 164 (fontified t) 164 176 (fontified t) 176 180 (face py-variable-name-face fontified t) 180 181 (face (rainbow-delimiters-depth-1-face) fontified t) 181 187 (fontified t) 187 188 (face py-number-face fontified t) 188 189 (face (rainbow-delimiters-depth-1-face) fontified t) 189 190 (fontified t) 190 191 (face font-lock-operator-face fontified t) 191 193 (fontified t) 193 194 (face py-number-face fontified t) 194 195 (fontified t) 195 203 (fontified t) 203 207 (face font-lock-keyword-face fontified t) 207 208 (fontified t)) . 547) (undo-tree-id372 . -208) (undo-tree-id373 . -8) (undo-tree-id374 . -208) (t 26363 61587 244457 503000)) nil (26363 61715 644879 746000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -546) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) 547) nil (26363 61715 644877 996000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -495) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -496) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("l" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -497) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -498) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("e" 0 1 (face py-pseudo-keyword-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -499) (undo-tree-id367 . -1) 500) nil (26363 61715 644874 850000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 494) (undo-tree-id357 . -1) (undo-tree-id358 . -1) 495) nil (26363 61715 644868 646000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -493) (undo-tree-id355 . -1) (undo-tree-id356 . -1) 494) nil (26363 61715 644866 711000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 492) (undo-tree-id353 . -1) (undo-tree-id354 . -1) 493) nil (26363 61715 644864 877000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -488) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("o" 0 1 (fontified t)) . -489) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("o" 0 1 (fontified t)) . -490) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("l" 0 1 (face py-builtins-face fontified t)) . -491) (undo-tree-id351 . -1) (undo-tree-id352 . -1) 492) nil (26363 61715 644862 568000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 487) (undo-tree-id343 . -1) (undo-tree-id344 . -1) 488) nil (26363 61715 644858 109000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -483) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (#("a" 0 1 (fontified t)) . -484) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("d" 0 1 (fontified t)) . -485) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (#(":" 0 1 (fontified t)) . -486) (undo-tree-id341 . -1) (undo-tree-id342 . -1) 487) nil (26363 61715 644856 163000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 482) (undo-tree-id333 . -1) (undo-tree-id334 . -1) 483) nil (26363 61715 644850 808000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -481) (undo-tree-id331 . -1) (undo-tree-id332 . -1) 482) nil (26363 61715 644849 206000) 0 nil])
([nil nil ((528 . 536) (#("            " 0 12 (fontified t)) . 528) 549) nil (26363 61715 644847 647000) 0 nil])
([nil nil ((#("grid" 0 4 (face py-variable-name-face fontified t)) . 536)) nil (26363 61715 644846 762000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 536) (#("=" 0 1 (fontified t)) . 536) (#(" " 0 1 (fontified t)) . 536)) nil (26363 61715 644845 938000) 0 nil])
([nil nil ((#("np.zeros((dim,dim))" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t) 9 10 (face (rainbow-delimiters-depth-2-face) fontified t) 10 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-2-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t)) . 536) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -19) 555) nil (26363 61715 644844 980000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -552) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -553) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -554) (undo-tree-id325 . -1) (#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -555) (undo-tree-id326 . -1) 556) nil (26363 61715 644836 430000) 0 nil])
([nil nil ((nil rear-nonsticky nil 570 . 571) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (nil fontified nil 562 . 569) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 552 . 560) (552 . 571)) nil (26363 61715 644825 131000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 532) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) 536) nil (26363 61715 644823 434000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -528) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) 532) nil (26363 61715 644810 18000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -527) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 528) nil (26363 61715 644782 95000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -226) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -227) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("u" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -228) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("e" 0 1 (face py-pseudo-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -229) (undo-tree-id489 . -1) 230 (t 26363 61715 765695 556000)) nil (26363 61719 747628 988000) 0 nil])
([nil nil ((265 . 274) (t 26366 45608 6331 653000)) nil (26368 21560 197637 421000) 0 nil])
([nil nil ((274 . 279)) nil (26368 21560 197636 209000) 0 nil])
([nil nil ((279 . 300)) nil (26368 21560 197634 956000) 0 nil])
([nil nil ((300 . 304)) nil (26368 21560 197630 498000) 0 nil])
([nil nil ((599 . 603) (#("    " 0 4 (fontified nil)) . 598) (undo-tree-id452 . -4) (597 . 603) (t 26368 21560 199714 540000)) nil (26368 24681 372891 280000) 0 nil])
([nil nil ((603 . 614)) nil (26368 24681 372890 588000) 0 nil])
([nil nil ((#("q" 0 1 (face py-def-face fontified t)) . -613) (undo-tree-id451 . -1) 614) nil (26368 24681 372890 207000) 0 nil])
([nil nil ((613 . 614)) nil (26368 24681 372889 376000) 0 nil])
([nil nil ((#("w" 0 1 (face py-def-face fontified t)) . -613) (undo-tree-id450 . -1) 614) nil (26368 24681 372889 176000) 0 nil])
([nil nil ((#("i" 0 1 (face py-def-face fontified t)) . -607) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -608) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("i" 0 1 (face py-def-face fontified t)) . -609) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("t" 0 1 (face py-def-face fontified t)) . -610) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("R" 0 1 (face py-def-face fontified t)) . -611) (undo-tree-id448 . -1) (#("e" 0 1 (face py-def-face fontified t)) . -612) (undo-tree-id449 . -1) 613) nil (26368 24681 372887 903000) 0 nil])
([nil nil ((607 . 613)) nil (26368 24681 372882 373000) 0 nil])
([nil nil ((613 . 631)) nil (26368 24681 372882 32000) 0 nil])
([nil nil ((631 . 632)) nil (26368 24681 372881 902000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -627) (undo-tree-id427 . -1) (#("u" 0 1 (fontified t)) . -628) (undo-tree-id428 . -1) (#("l" 0 1 (fontified t)) . -629) (undo-tree-id429 . -1) (#("t" 0 1 (fontified t)) . -630) (undo-tree-id430 . -1) (#(":" 0 1 (fontified t)) . -631) (undo-tree-id431 . -1) 632) nil (26368 24681 372881 211000) 0 nil])
([nil nil ((627 . 629)) nil (26368 24681 372879 577000) 0 nil])
([nil nil ((629 . 637)) nil (26368 24681 372879 327000) 0 nil])
([nil nil ((637 . 638)) nil (26368 24681 372879 36000) 0 nil])
([nil nil ((638 . 645)) nil (26368 24681 372878 706000) 0 nil])
([nil nil ((645 . 657)) nil (26368 24681 372878 556000) 0 nil])
([nil nil ((657 . 658)) nil (26368 24681 372878 305000) 0 nil])
([nil nil ((658 . 666)) nil (26368 24681 372878 155000) 0 nil])
([nil nil ((666 . 667)) nil (26368 24681 372877 904000) 0 nil])
([nil nil ((667 . 676)) nil (26368 24681 372877 574000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -664) (undo-tree-id425 . -1) (undo-tree-id426 . -1) 665) nil (26368 24681 372877 83000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 663) (undo-tree-id423 . -1) (undo-tree-id424 . -1) 664) nil (26368 24681 372875 890000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -662) (undo-tree-id421 . -1) (undo-tree-id422 . -1) 663) nil (26368 24681 372874 889000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 661) (undo-tree-id419 . -1) (undo-tree-id420 . -1) 662) nil (26368 24681 372873 676000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -647) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (#("o" 0 1 (fontified t)) . -648) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("a" 0 1 (fontified t)) . -649) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (#("l" 0 1 (fontified t)) . -650) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#("R" 0 1 (fontified t)) . -651) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("e" 0 1 (fontified t)) . -652) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("w" 0 1 (fontified t)) . -653) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("a" 0 1 (fontified t)) . -654) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (#("r" 0 1 (fontified t)) . -655) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#("d" 0 1 (fontified t)) . -656) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (#(":" 0 1 (fontified t)) . -657) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("i" 0 1 (fontified t)) . -658) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -659) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("t" 0 1 (face py-builtins-face fontified t)) . -660) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) 661) nil (26368 24681 372870 470000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 646) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) 647) nil (26368 24681 372847 437000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -645) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) 646) nil (26368 24681 372845 133000) 0 nil])
([nil nil ((656 . 659)) nil (26368 24681 372843 29000) 0 nil])
([nil nil ((#("s" 0 1 (face py-def-face fontified t)) . -607) (undo-tree-id323 . -1) (#("e" 0 1 (face py-def-face fontified t)) . -608) (undo-tree-id324 . -1) (#("t" 0 1 (face py-def-face fontified t)) . -609) (undo-tree-id325 . -1) 610) nil (26368 24681 372842 37000) 0 nil])
([nil nil ((607 . 610)) nil (26368 24681 372834 492000) 0 nil])
([nil nil ((#("t" 0 1 (face py-def-face fontified t)) . -609) (undo-tree-id322 . -1) 610) nil (26368 24681 372834 122000) 0 nil])
([nil nil ((609 . 611)) nil (26368 24681 372833 711000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -657) (undo-tree-id319 . -1) (#("." 0 1 (fontified t)) . -658) (undo-tree-id320 . -1) (#("." 0 1 (fontified t)) . -659) (undo-tree-id321 . -1) 660) nil (26368 24681 372833 160000) 0 nil])
([nil nil ((646 . 652)) nil (26368 24681 372832 68000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -651) (undo-tree-id318 . -1) 652) nil (26368 24681 372831 787000) 0 nil])
([nil nil ((651 . 652)) nil (26368 24681 372831 256000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -650) (undo-tree-id316 . -1) (#("a" 0 1 (fontified t)) . -651) (undo-tree-id317 . -1) 652) nil (26368 24681 372830 846000) 0 nil])
([nil nil ((650 . 658)) nil (26368 24681 372829 934000) 0 nil])
([nil nil ((658 . 659)) nil (26368 24681 372829 703000) 0 nil])
([nil nil ((659 . 666)) nil (26368 24681 372829 533000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -665) (undo-tree-id315 . -1) 666) nil (26368 24681 372829 142000) 0 nil])
([nil nil ((665 . 666)) nil (26368 24681 372828 692000) 0 nil])
([nil nil ((#("5" 0 1 (face py-number-face fontified t)) . -665) (undo-tree-id314 . -1) 666) nil (26368 24681 372828 291000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 664) (undo-tree-id313 . -1) 665) nil (26368 24681 372827 630000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -663) (undo-tree-id312 . -1) 664) nil (26368 24681 372826 978000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 662) (undo-tree-id311 . -1) 663) nil (26368 24681 372826 327000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -648) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#("o" 0 1 (fontified t)) . -649) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("a" 0 1 (fontified t)) . -650) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("l" 0 1 (fontified t)) . -651) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("R" 0 1 (fontified t)) . -652) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("e" 0 1 (fontified t)) . -653) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#("w" 0 1 (fontified t)) . -654) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("a" 0 1 (fontified t)) . -655) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("r" 0 1 (fontified t)) . -656) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#("d" 0 1 (fontified t)) . -657) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#(":" 0 1 (fontified t)) . -658) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("i" 0 1 (fontified t)) . -659) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -660) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("t" 0 1 (face py-builtins-face fontified t)) . -661) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) 662) nil (26368 24681 372823 832000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 647) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) 648) nil (26368 24681 372802 161000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -646) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 647) nil (26368 24681 372799 86000) 0 nil])
([nil nil ((598 . 603)) nil (26368 24681 372797 563000) 0 nil])
([nil nil ((598 . 603)) nil (26368 24681 372797 52000) 0 nil])
([nil nil ((603 . 611)) nil (26368 24681 372796 651000) 0 nil])
([nil nil ((611 . 627)) nil (26368 24681 372796 401000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -626) (undo-tree-id233 . -1) 627) nil (26368 24681 372796 0) 0 nil])
([nil nil ((626 . 639)) nil (26368 24681 372795 429000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 638) (undo-tree-id232 . -1) 639) nil (26368 24681 372795 48000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -637) (undo-tree-id231 . -1) 638) nil (26368 24681 372794 377000) 0 nil])
([nil nil ((637 . 638)) nil (26368 24681 372793 796000) 0 nil])
([nil nil ((638 . 652)) nil (26368 24681 372793 555000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -643) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("i" 0 1 (fontified t)) . -644) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -645) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("t" 0 1 (face py-builtins-face fontified t)) . -646) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("," 0 1 (fontified t)) . -647) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#("i" 0 1 (fontified t)) . -648) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -649) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("t" 0 1 (face py-builtins-face fontified t)) . -650) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -651) (undo-tree-id230 . -1) 652) nil (26368 24681 372791 792000) 0 nil])
([nil nil ((643 . 652)) nil (26368 24681 372773 798000) 0 nil])
([nil nil ((652 . 656)) nil (26368 24681 372773 367000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -655) (undo-tree-id192 . -1) 656) nil (26368 24681 372773 17000) 0 nil])
([nil nil ((655 . 656)) nil (26368 24681 372772 405000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -655) (undo-tree-id191 . -1) 656) nil (26368 24681 372771 894000) 0 nil])
([nil nil ((655 . 675)) nil (26368 24681 372770 993000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 674) (undo-tree-id190 . -1) 675) nil (26368 24681 372770 592000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -673) (undo-tree-id189 . -1) 674) nil (26368 24681 372769 931000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 672) (undo-tree-id188 . -1) 673) nil (26368 24681 372769 159000) 0 nil])
([nil nil ((672 . 673)) nil (26368 24681 372768 528000) 0 nil])
([nil nil ((673 . 680)) nil (26368 24681 372768 268000) 0 nil])
([nil nil ((680 . 682)) nil (26368 24681 372768 37000) 0 nil])
([nil nil ((682 . 683)) nil (26368 24681 372767 506000) 0 nil])
([nil nil ((683 . 692)) nil (26368 24681 372767 236000) 0 nil])
([nil nil ((756 . 759)) nil (26368 24681 372766 915000) 0 nil])
([nil nil ((692 . 697)) nil (26368 24681 372766 675000) 0 nil])
([nil nil ((697 . 718)) nil (26368 24681 372766 534000) 0 nil])
([nil nil ((718 . 723)) nil (26368 24681 372766 214000) 0 nil])
([nil nil ((723 . 743)) nil (26368 24681 372766 63000) 0 nil])
([nil nil ((743 . 752)) nil (26368 24681 372765 763000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 748) (undo-tree-id187 . -4) 752) nil (26368 24681 372765 192000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -744) (undo-tree-id186 . -4) 748) nil (26368 24681 372764 30000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -742) (undo-tree-id184 . -1) (#("
" 0 1 (fontified t)) . -743) (undo-tree-id185 . -1) 744) nil (26368 24681 372763 68000) 0 nil])
([nil nil ((742 . 743)) nil (26368 24681 372761 4000) 0 nil])
([nil nil ((735 . 745) (#("goa" 0 3 (fontified nil)) . -735) (735 . 738) (#("goalReward" 0 10 (fontified nil)) . -735) (735 . 745) (#("goalRewa" 0 8 (fontified t)) . -735) (undo-tree-id180 . -8) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -8) 743) nil (26368 24681 372760 212000) 0 nil])
([nil nil ((745 . 754)) nil (26368 24681 372757 788000) 0 nil])
([nil nil ((682 . 689)) nil (26368 24681 372757 97000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -688) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 689) nil (26368 24681 372756 586000) 0 nil])
([nil nil ((688 . 690)) nil (26368 24681 372755 233000) 0 nil])
([nil nil ((686 . 690) (#("None" 0 4 (fontified nil)) . -686) (686 . 690) (#("None" 0 4 (face py-pseudo-keyword-face fontified t)) . -686) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) 690) nil (26368 24681 372754 672000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 758) (undo-tree-id171 . -4) 762) nil (26368 24681 372753 169000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 4 5 (fontified t)) . 754)) nil (26368 24681 372752 478000) 0 nil])
([nil nil ((#("        ..." 0 11 (fontified t)) . 809) (undo-tree-id169 . -8) (undo-tree-id170 . -8)) nil (26368 24681 372752 177000) 0 nil])
([nil nil ((809 . 817)) nil (26368 24681 372751 336000) 0 nil])
([nil nil ((817 . 832)) nil (26368 24681 372751 85000) 0 nil])
([nil nil ((832 . 851)) nil (26368 24681 372750 945000) 0 nil])
([nil nil ((808 . 817)) nil (26368 24681 372750 785000) 0 nil])
([nil nil ((817 . 818)) nil (26368 24681 372750 344000) 0 nil])
([nil nil ((818 . 822)) nil (26368 24681 372749 883000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -817) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("e" 0 1 (fontified t)) . -818) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("l" 0 1 (fontified t)) . -819) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -820) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("." 0 1 (fontified t)) . -821) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 822) nil (26368 24681 372748 400000) 0 nil])
([nil nil ((817 . 821)) nil (26368 24681 372732 831000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 820) (undo-tree-id143 . -1) 821) nil (26368 24681 372732 450000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -818) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("m" 0 1 (fontified t)) . -819) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 820) nil (26368 24681 372731 518000) 0 nil])
([nil nil ((818 . 833)) nil (26368 24681 372728 643000) 0 nil])
([nil nil ((828 . 837) (#("DI" 0 2 (fontified nil)) . -828) (828 . 830) (#("DIMENSION" 0 9 (fontified nil)) . -828) (828 . 837) (#("DIMEN" 0 5 (fontified t)) . -828) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) 833) nil (26368 24681 372727 912000) 0 nil])
([nil nil ((880 . 889)) nil (26368 24681 372726 439000) 0 nil])
([nil nil ((771 . 778)) nil (26368 24681 372726 188000) 0 nil])
([nil nil ((897 . 905)) nil (26368 24681 372725 938000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 901) (undo-tree-id130 . -4) 905) nil (26368 24681 372725 487000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -597) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("
" 0 1 (fontified t)) . -598) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("    def initGoalReward(self, goalCoord:tuple[int,int] = (0,0), goalReward: int = 5) -> None:
        self.rewards[goalCoord[0], goalCoord[1]] = goalReward
    
    def initDefaultRewards(self, defaultReward:int = 0):
        dim = self.DIMENSION
        self.rewards = np.zeros((dim,dim))
        
    " 0 4 (fontified t) 4 7 (face py-def-class-face fontified t) 7 8 (fontified t) 8 22 (face py-def-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 27 (face py-object-reference-face fontified t) 27 39 (fontified t) 39 44 (face py-builtins-face fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 48 (face py-builtins-face fontified t) 48 49 (fontified t) 49 52 (face py-builtins-face fontified t) 52 53 (face (rainbow-delimiters-depth-2-face) fontified t) 53 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-2-face) fontified t) 57 58 (face py-number-face fontified t) 58 59 (fontified t) 59 60 (face py-number-face fontified t) 60 61 (face (rainbow-delimiters-depth-2-face) fontified t) 61 75 (fontified t) 75 78 (face py-builtins-face fontified t) 78 81 (fontified t) 81 82 (face py-number-face fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t) 83 87 (fontified t) 87 91 (face py-pseudo-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 91 93 (fontified t) 93 101 (fontified t) 101 105 (face py-object-reference-face fontified t) 105 106 (fontified t) 106 113 (face py-variable-name-face fontified t) 113 114 (face (rainbow-delimiters-depth-1-face) fontified t) 114 123 (face py-variable-name-face fontified t) 123 124 (face (rainbow-delimiters-depth-2-face) fontified t) 124 125 (face py-number-face fontified t) 125 126 (face (rainbow-delimiters-depth-2-face) fontified t) 126 128 (fontified t) 128 137 (face py-variable-name-face fontified t) 137 138 (face (rainbow-delimiters-depth-2-face) fontified t) 138 139 (face py-number-face fontified t) 139 140 (face (rainbow-delimiters-depth-2-face) fontified t) 140 141 (face (rainbow-delimiters-depth-1-face) fontified t) 141 142 (fontified t) 142 143 (face font-lock-operator-face fontified t) 143 144 (fontified t) 144 155 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 155 159 (fontified t) 159 160 (fontified t) 160 164 (fontified t) 164 167 (face py-def-class-face fontified t) 167 168 (fontified t) 168 179 (face py-def-face fontified t) 179 186 (face py-def-face fontified t) 186 187 (face (rainbow-delimiters-depth-1-face) fontified t) 187 191 (face py-object-reference-face fontified t) 191 193 (fontified t) 193 207 (fontified t) 207 210 (face py-builtins-face fontified t) 210 213 (fontified t) 213 214 (face py-number-face fontified t) 214 215 (face (rainbow-delimiters-depth-1-face) fontified t) 215 217 (fontified t) 217 225 (fontified t) 225 228 (face py-variable-name-face fontified t) 228 229 (fontified t) 229 230 (face font-lock-operator-face fontified t) 230 231 (fontified t) 231 235 (face py-object-reference-face fontified t) 235 236 (fontified t) 236 245 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 245 246 (fontified t) 246 254 (fontified t) 254 258 (face py-object-reference-face fontified t) 258 259 (fontified t) 259 266 (face py-variable-name-face fontified t) 266 267 (fontified t) 267 268 (face font-lock-operator-face fontified t) 268 277 (fontified t) 277 278 (face (rainbow-delimiters-depth-1-face) fontified t) 278 279 (face (rainbow-delimiters-depth-2-face) fontified t) 279 286 (fontified t) 286 287 (face (rainbow-delimiters-depth-2-face) fontified t) 287 288 (face (rainbow-delimiters-depth-1-face) fontified t) 288 297 (fontified t) 297 298 (fontified t) 298 302 (fontified t)) . 599) (undo-tree-id120 . -302) (undo-tree-id121 . -236) (undo-tree-id122 . -236) (undo-tree-id123 . -236) (undo-tree-id124 . -246) (undo-tree-id125 . -215) (undo-tree-id126 . -214) (undo-tree-id127 . -246) (undo-tree-id128 . -302) (undo-tree-id129 . -236)) nil (26368 24681 372724 235000) 0 nil])
([nil nil ((493 . 502)) nil (26368 24681 372714 256000) 0 nil])
([nil nil ((502 . 509)) nil (26368 24681 372713 995000) 0 nil])
([nil nil ((509 . 518)) nil (26368 24681 372713 284000) 0 nil])
([nil nil ((518 . 529)) nil (26368 24681 372712 593000) 0 nil])
([nil nil ((529 . 548)) nil (26368 24681 372711 711000) 0 nil])
([nil nil ((548 . 557)) nil (26368 24681 372710 899000) 0 nil])
([nil nil ((557 . 576)) nil (26368 24681 372710 469000) 0 nil])
([nil nil ((576 . 585)) nil (26368 24681 372709 938000) 0 nil])
([nil nil ((585 . 593)) nil (26368 24681 372709 377000) 0 nil])
([nil nil ((#("        pprint()" 0 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t)) . 577) (undo-tree-id2 . -8) (undo-tree-id3 . -13) (undo-tree-id4 . -13) (undo-tree-id5 . -10) (undo-tree-id6 . -11) (undo-tree-id7 . -11) (undo-tree-id8 . -11) (undo-tree-id9 . -11) (undo-tree-id10 . -11) (undo-tree-id11 . -11) (undo-tree-id12 . -11) (undo-tree-id13 . -11) (undo-tree-id14 . -11) (undo-tree-id15 . -11) (undo-tree-id16 . -11) (undo-tree-id17 . -12) (undo-tree-id18 . -12) (undo-tree-id19 . -12) (undo-tree-id20 . -12) (undo-tree-id21 . -12) (undo-tree-id22 . -12) (undo-tree-id23 . -12) (undo-tree-id24 . -12) (undo-tree-id25 . -12) (undo-tree-id26 . -12) (undo-tree-id27 . -12) (undo-tree-id28 . -13) (undo-tree-id29 . -13) (undo-tree-id30 . -13) (undo-tree-id31 . -13) (undo-tree-id32 . -13) (undo-tree-id33 . -13) (undo-tree-id34 . -13) (undo-tree-id35 . -13) (undo-tree-id36 . -13) (undo-tree-id37 . -13) (undo-tree-id38 . -13) (undo-tree-id39 . -14) (undo-tree-id40 . -14) (undo-tree-id41 . -14) (undo-tree-id42 . -14) (undo-tree-id43 . -14) (undo-tree-id44 . -14) (undo-tree-id45 . -14) (undo-tree-id46 . -14) (undo-tree-id47 . -14) (undo-tree-id48 . -14) (undo-tree-id49 . -14) (undo-tree-id50 . -15) (undo-tree-id51 . -15) (undo-tree-id52 . -15) (undo-tree-id53 . -15) (undo-tree-id54 . -15) (undo-tree-id55 . -15) (undo-tree-id56 . -15) (undo-tree-id57 . -15) (undo-tree-id58 . -15) (undo-tree-id59 . -15) (undo-tree-id60 . -15) (undo-tree-id61 . -15) (undo-tree-id62 . -15) (undo-tree-id63 . -16) (undo-tree-id64 . -16) (undo-tree-id65 . -16) (undo-tree-id66 . -16) (undo-tree-id67 . -16) (undo-tree-id68 . -16) (undo-tree-id69 . -16) (undo-tree-id70 . -16) (undo-tree-id71 . -16) (undo-tree-id72 . -16) (undo-tree-id73 . -16) (undo-tree-id74 . -16) (undo-tree-id75 . -16) (undo-tree-id76 . -16) (undo-tree-id77 . -16) (undo-tree-id78 . -16) (undo-tree-id79 . -16) (undo-tree-id80 . -16) (undo-tree-id81 . -16) (undo-tree-id82 . -16) (undo-tree-id83 . -16) (undo-tree-id84 . -16) (undo-tree-id85 . -16) (undo-tree-id86 . -16) (undo-tree-id87 . -16) (undo-tree-id88 . -16) (undo-tree-id89 . -16) (undo-tree-id90 . -16) (undo-tree-id91 . -16) (undo-tree-id92 . -16) (undo-tree-id93 . -16) (undo-tree-id94 . -16) (undo-tree-id95 . -16) (undo-tree-id96 . -13) (undo-tree-id97 . -16)) nil (26368 24681 372707 483000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 577) (undo-tree-id0 . 1) (undo-tree-id1 . -1)) nil (26368 24681 372529 27000) 0 nil])
([nil nil ((680 . 681) 577) nil (26368 24681 372500 493000) 0 nil])
([nil nil ((682 . 686) (#("    " 0 4 (fontified nil)) . 681) (undo-tree-id621 . -4) (680 . 686) (t 26368 24681 374770 970000)) nil (26368 24969 302278 561000) 0 nil])
([nil nil ((686 . 707)) nil (26368 24969 302277 939000) 0 nil])
([nil nil ((707 . 719)) nil (26368 24969 302277 569000) 0 nil])
([nil nil ((719 . 720)) nil (26368 24969 302277 248000) 0 nil])
([nil nil ((720 . 721)) nil (26368 24969 302276 687000) 0 nil])
([nil nil ((721 . 724)) nil (26368 24969 302276 376000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -721) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("p" 0 1 (fontified t)) . -722) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#("." 0 1 (fontified t)) . -723) (undo-tree-id620 . -1) 724) nil (26368 24969 302275 435000) 0 nil])
([nil nil ((721 . 741)) nil (26368 24969 302272 900000) 0 nil])
([nil nil ((741 . 742)) nil (26368 24969 302272 659000) 0 nil])
([nil nil ((742 . 751)) nil (26368 24969 302272 8000) 0 nil])
([nil nil ((304 . 313)) nil (26368 24969 302271 547000) 0 nil])
([nil nil ((313 . 329)) nil (26368 24969 302271 197000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -328) (undo-tree-id611 . -1) 329) nil (26368 24969 302270 686000) 0 nil])
([nil nil ((328 . 337)) nil (26368 24969 302270 145000) 0 nil])
([nil nil ((332 . 337) (#("Fal" 0 3 (fontified nil)) . -332) (332 . 335) (#("False" 0 5 (face py-pseudo-keyword-face fontified t)) . -332) (undo-tree-id607 . -5) (undo-tree-id608 . -5) (undo-tree-id609 . -5) (undo-tree-id610 . -5) 337) nil (26368 24969 302269 684000) 0 nil])
([nil nil ((784 . 795)) nil (26368 24969 302268 481000) 0 nil])
([nil nil ((792 . 803) (#("re" 0 2 (fontified nil)) . -792) (792 . 794) (#("rewards_set" 0 11 (fontified nil)) . -792) (792 . 803) (#("rew" 0 3 (fontified t)) . -792) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) 795) nil (26368 24969 302267 810000) 0 nil])
([nil nil ((803 . 804)) nil (26368 24969 302265 295000) 0 nil])
([nil nil ((804 . 817)) nil (26368 24969 302265 25000) 0 nil])
([nil nil ((817 . 829)) nil (26368 24969 302264 754000) 0 nil])
([nil nil ((823 . 835) (#("Run" 0 3 (fontified nil)) . -823) (823 . 826) (#("RuntimeError" 0 12 (fontified nil)) . -823) (823 . 835) (#("Runtim" 0 6 (fontified t match-data (0 3 0 1 1 2 2 3))) . -823) (undo-tree-id599 . -6) (undo-tree-id600 . -6) (undo-tree-id601 . -6) (undo-tree-id602 . -6) 829) nil (26368 24969 302264 53000) 0 nil])
([nil nil ((835 . 844)) nil (26368 24969 302262 650000) 0 nil])
([nil nil ((#("}" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -843) (undo-tree-id597 . -1) (undo-tree-id598 . -1) 844) nil (26368 24969 302262 39000) 0 nil])
([nil nil ((843 . 844)) nil (26368 24969 302261 258000) 0 nil])
([nil nil ((844 . 845)) nil (26368 24969 302260 767000) 0 nil])
([nil nil ((845 . 866)) nil (26368 24969 302260 466000) 0 nil])
([nil nil ((866 . 868)) nil (26368 24969 302260 206000) 0 nil])
([nil nil ((868 . 889)) nil (26368 24969 302259 945000) 0 nil])
([nil nil ((889 . 902)) nil (26368 24969 302259 745000) 0 nil])
([nil nil ((902 . 911)) nil (26368 24969 302259 464000) 0 nil])
([nil nil ((904 . 912) (#("        " 0 8 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 903) (undo-tree-id596 . -8) (911 . 912)) nil (26368 24969 302259 64000) 0 nil])
([nil nil ((912 . 923)) nil (26368 24969 302258 452000) 0 nil])
([nil nil ((919 . 929) (#("isi" 0 3 (fontified nil)) . -919) (919 . 922) (#("isinstance" 0 10 (fontified nil)) . -919) (919 . 929) (#("isin" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -919) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) 923) nil (26368 24969 302257 771000) 0 nil])
([nil nil ((929 . 935)) nil (26368 24969 302256 148000) 0 nil])
([nil nil ((930 . 943) (#("rew" 0 3 (fontified nil)) . -930) (930 . 933) (#("reward_values" 0 13 (fontified nil)) . -930) (930 . 943) (#("rewar" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -930) (undo-tree-id588 . -5) (undo-tree-id589 . -5) (undo-tree-id590 . -5) (undo-tree-id591 . -5) 935) nil (26368 24969 302255 86000) 0 nil])
([nil nil ((943 . 955)) nil (26368 24969 302253 503000) 0 nil])
([nil nil ((955 . 956)) nil (26368 24969 302253 363000) 0 nil])
([nil nil ((956 . 957)) nil (26368 24969 302253 223000) 0 nil])
([nil nil ((957 . 970)) nil (26368 24969 302252 722000) 0 nil])
([nil nil ((970 . 975)) nil (26368 24969 302252 481000) 0 nil])
([nil nil ((970 . 975) (#("rai" 0 3 (fontified nil)) . -970) (970 . 973) (#("raise" 0 5 (face font-lock-keyword-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -970) (undo-tree-id584 . -5) (undo-tree-id585 . -5) (undo-tree-id586 . -5) (undo-tree-id587 . -5) 975) nil (26368 24969 302251 920000) 0 nil])
([nil nil ((975 . 982)) nil (26368 24969 302250 337000) 0 nil])
([nil nil ((976 . 985) (#("Typ" 0 3 (fontified nil)) . -976) (976 . 979) (#("TypeError" 0 9 (fontified nil)) . -976) (976 . 985) (#("TypeEr" 0 6 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -976) (undo-tree-id580 . -6) (undo-tree-id581 . -6) (undo-tree-id582 . -6) (undo-tree-id583 . -6) 982) nil (26368 24969 302249 355000) 0 nil])
([nil nil ((985 . 995)) nil (26368 24969 302100 884000) 0 nil])
([nil nil ((995 . 1003)) nil (26368 24969 302100 513000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1001) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (#("m" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1002) (undo-tree-id578 . -1) (undo-tree-id579 . -1) 1003) nil (26368 24969 302100 82000) 0 nil])
([nil nil ((1001 . 1022)) nil (26368 24969 302097 918000) 0 nil])
([nil nil ((1022 . 1025)) nil (26368 24969 302097 477000) 0 nil])
([nil nil ((1025 . 1034)) nil (26368 24969 302097 77000) 0 nil])
([nil nil ((1034 . 1042)) nil (26368 24969 302096 566000) 0 nil])
([nil nil ((1037 . 1050) (#("rew" 0 3 (fontified nil)) . -1037) (1037 . 1040) (#("reward_values" 0 13 (fontified nil)) . -1037) (1037 . 1050) (#("rewar" 0 5 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1037) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) 1042) nil (26368 24969 302095 945000) 0 nil])
([nil nil ((1050 . 1056)) nil (26368 24969 302093 760000) 0 nil])
([nil nil ((1056 . 1066)) nil (26368 24969 302093 360000) 0 nil])
([nil nil ((1066 . 1075) (#("DIMENSION" 0 9 (fontified nil)) . -1066) (1066 . 1075)) nil (26368 24969 302092 869000) 0 nil])
([nil nil ((1075 . 1082)) nil (26368 24969 302092 418000) 0 nil])
([nil nil ((1082 . 1091) (#("DIMENSION" 0 9 (fontified nil)) . -1082) (1082 . 1091)) nil (26368 24969 302091 957000) 0 nil])
([nil nil ((1091 . 1092)) nil (26368 24969 302091 516000) 0 nil])
([nil nil ((1092 . 1093)) nil (26368 24969 302091 175000) 0 nil])
([nil nil ((1093 . 1106)) nil (26368 24969 302090 925000) 0 nil])
([nil nil ((1106 . 1113)) nil (26368 24969 302090 554000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t match-data (0 0))) . -1112) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) 1113) nil (26368 24969 302090 174000) 0 nil])
([nil nil ((1112 . 1115)) nil (26368 24969 302088 701000) 0 nil])
([nil nil ((1112 . 1122) (#("Val" 0 3 (fontified nil)) . -1112) (1112 . 1115) (#("ValueError" 0 10 (fontified nil)) . -1112) (1112 . 1122) (#("Val" 0 3 (fontified t match-data (0 0))) . -1112) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) 1115) nil (26368 24969 302088 80000) 0 nil])
([nil nil ((1122 . 1124)) nil (26368 24969 302086 507000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -1123) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 1124) nil (26368 24969 302086 66000) 0 nil])
([nil nil ((1123 . 1126)) nil (26368 24969 302084 453000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -1125) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) 1126) nil (26368 24969 302084 12000) 0 nil])
([nil nil ((1125 . 1146)) nil (26368 24969 302082 479000) 0 nil])
([nil nil ((1146 . 1150)) nil (26368 24969 302082 208000) 0 nil])
([nil nil ((1150 . 1156)) nil (26368 24969 302081 948000) 0 nil])
([nil nil ((1155 . 1164) (#("D" 0 1 (fontified nil)) . -1155) (1155 . 1156) (#("DIMENSION" 0 9 (fontified nil)) . -1155) (1155 . 1164) (#("D" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -1155) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) 1156) nil (26368 24969 302081 307000) 0 nil])
([nil nil ((1164 . 1167)) nil (26368 24969 302079 734000) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-string-face fontified t match-data (0 1 0 1))) . -1166) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 1167) nil (26368 24969 302079 163000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t match-data (0 1 0 1))) . 1165) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) 1166) nil (26368 24969 302077 620000) 0 nil])
([nil nil ((1165 . 1173)) nil (26368 24969 302075 886000) 0 nil])
([nil nil ((1172 . 1181) (#("D" 0 1 (fontified nil)) . -1172) (1172 . 1173) (#("DIMENSION" 0 9 (fontified nil)) . -1172) (1172 . 1181) (#("D" 0 1 (face font-lock-string-face fontified t match-data (0 1 0 1))) . -1172) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) 1173) nil (26368 24969 302075 185000) 0 nil])
([nil nil ((1181 . 1182)) nil (26368 24969 302072 480000) 0 nil])
([nil nil ((1182 . 1184)) nil (26368 24969 302072 230000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t match-data (0 1 0 1))) . -1183) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) 1184) nil (26368 24969 302071 669000) 0 nil])
([nil nil ((1183 . 1191)) nil (26368 24969 302070 466000) 0 nil])
([nil nil ((1193 . 1201) (#("        " 0 8 (fontified nil match-data (0 1 0 1))) . 1192) (undo-tree-id535 . -8) (1191 . 1201)) nil (26368 24969 302069 815000) 0 nil])
([nil nil ((1201 . 1213)) nil (26368 24969 302069 144000) 0 nil])
([nil nil ((1213 . 1222)) nil (26368 24969 302068 903000) 0 nil])
([nil nil ((1216 . 1229) (#("rew" 0 3 (fontified nil)) . -1216) (1216 . 1219) (#("reward_values" 0 13 (fontified nil)) . -1216) (1216 . 1229) (#("reward" 0 6 (fontified t match-data (0 1 0 1))) . -1216) (undo-tree-id531 . -6) (undo-tree-id532 . -6) (undo-tree-id533 . -6) (undo-tree-id534 . -6) 1222) nil (26368 24969 302068 162000) 0 nil])
([nil nil ((1229 . 1238)) nil (26368 24969 302066 619000) 0 nil])
([nil nil ((1238 . 1247)) nil (26368 24969 302066 348000) 0 nil])
([nil nil ((1243 . 1254) (#("re" 0 2 (fontified nil)) . -1243) (1243 . 1245) (#("rewards_set" 0 11 (fontified nil)) . -1243) (1243 . 1254) (#("rewa" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1243) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) 1247) nil (26368 24969 302065 527000) 0 nil])
([nil nil ((1254 . 1261)) nil (26368 24969 302063 132000) 0 nil])
([nil nil ((1257 . 1261) (#("Tru" 0 3 (fontified nil)) . -1257) (1257 . 1260) (#("True" 0 4 (face py-pseudo-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1257) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -2) (undo-tree-id486 . -2) (undo-tree-id487 . -2) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (undo-tree-id490 . -2) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -3) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . -3) (undo-tree-id497 . -3) (undo-tree-id498 . -3) (undo-tree-id499 . -3) (undo-tree-id500 . -3) (undo-tree-id501 . -3) (undo-tree-id502 . -3) (undo-tree-id503 . -3) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) 1261) nil (26368 24969 302058 463000) 0 nil])
([nil nil ((1263 . 1271) (#("        " 0 8 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . 1262) (undo-tree-id624 . -8) (1261 . 1271) (t 26368 24969 304615 993000)) nil (26368 25107 355969 844000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1267) (undo-tree-id623 . -4) 1271) nil (26368 25107 355967 790000) 0 nil])
([nil nil ((1267 . 1288)) nil (26368 25107 355965 947000) 0 nil])
([nil nil ((1288 . 1290)) nil (26368 25107 355965 75000) 0 nil])
([nil nil ((1290 . 1302)) nil (26368 25107 355964 214000) 0 nil])
([nil nil ((1302 . 1303)) nil (26368 25107 355963 11000) 0 nil])
([nil nil ((1303 . 1315)) nil (26368 25107 355961 979000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1314) (undo-tree-id622 . -1) 1315) nil (26368 25107 355960 827000) 0 nil])
([nil nil ((1314 . 1315)) nil (26368 25107 355952 451000) 0 nil])
([nil nil ((1315 . 1316)) nil (26368 25107 355951 700000) 0 nil])
([nil nil ((1316 . 1325)) nil (26368 25107 355950 858000) 0 nil])
([nil nil ((1325 . 1336)) nil (26368 25107 355950 57000) 0 nil])
([nil nil ((775 . 784)) nil (26368 25107 355949 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 872 . 873) (nil fontified nil 784 . 873) (784 . 873)) nil (26368 25107 355948 404000) 0 nil])
([nil nil ((1414 . 1423)) nil (26368 25107 355947 312000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1517 . 1518) (nil fontified nil 1423 . 1518) (1423 . 1518)) nil (26368 25107 355942 823000) 0 nil])
([nil nil ((1538 . 1540) (t 26368 25107 358142 448000)) nil (26368 25189 272531 634000) 0 nil])
([nil nil ((1534 . 1544) (#("isinst" 0 6 (fontified nil)) . -1534) (1534 . 1540) (#("isinstance" 0 10 (fontified nil)) . -1534) (1534 . 1544) (#("isinst" 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1534) (undo-tree-id874 . -6) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -6) 1540) nil (26368 25189 272530 552000) 0 nil])
([nil nil ((1544 . 1550)) nil (26368 25189 272527 817000) 0 nil])
([nil nil ((1545 . 1557) (#("sta" 0 3 (fontified nil)) . -1545) (1545 . 1548) (#("state_values" 0 12 (fontified nil)) . -1545) (1545 . 1557) (#("state" 0 5 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1545) (undo-tree-id870 . -5) (undo-tree-id871 . -5) (undo-tree-id872 . -5) (undo-tree-id873 . -5) 1550) nil (26368 25189 272527 195000) 0 nil])
([nil nil ((1557 . 1567)) nil (26368 25189 272525 893000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1565) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (#("r" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1566) (undo-tree-id868 . -1) (undo-tree-id869 . -1) 1567) nil (26368 25189 272525 362000) 0 nil])
([nil nil ((1565 . 1569)) nil (26368 25189 272524 9000) 0 nil])
([nil nil ((1569 . 1570)) nil (26368 25189 272523 719000) 0 nil])
([nil nil ((1570 . 1571)) nil (26368 25189 272523 589000) 0 nil])
([nil nil ((1571 . 1584)) nil (26368 25189 272523 418000) 0 nil])
([nil nil ((1584 . 1587)) nil (26368 25189 272523 288000) 0 nil])
([nil nil ((1584 . 1589) (#("rai" 0 3 (fontified nil)) . -1584) (1584 . 1587) (#("raise" 0 5 (fontified nil)) . -1584) (1584 . 1589) (#("rai" 0 3 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1584) (undo-tree-id862 . -3) (undo-tree-id863 . -3) (undo-tree-id864 . -3) (undo-tree-id865 . -3) 1587) nil (26368 25189 272522 677000) 0 nil])
([nil nil ((1589 . 1594)) nil (26368 25189 272521 314000) 0 nil])
([nil nil ((1590 . 1599) (#("typ" 0 3 (fontified nil)) . -1590) (1590 . 1593) (#("TypeError" 0 9 (fontified nil)) . -1590) (1590 . 1599) (#("type" 0 4 (face py-builtins-face fontified t match-data (0 3 0 1 1 2 2 3))) . -1590) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) 1594) nil (26368 25189 272520 693000) 0 nil])
([nil nil ((1599 . 1612)) nil (26368 25189 272519 190000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1611) (undo-tree-id856 . -1) (undo-tree-id857 . -1) 1612) nil (26368 25189 272518 900000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1607) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (#("a" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1608) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (#("l" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1609) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (#("u" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1610) (undo-tree-id854 . -1) (undo-tree-id855 . -1) 1611) nil (26368 25189 272517 437000) 0 nil])
([nil nil ((1607 . 1624)) nil (26368 25189 272515 62000) 0 nil])
([nil nil ((1624 . 1638)) nil (26368 25189 272514 772000) 0 nil])
([nil nil ((1638 . 1647)) nil (26368 25189 272514 521000) 0 nil])
([nil nil ((1647 . 1658)) nil (26368 25189 272514 261000) 0 nil])
([nil nil ((1654 . 1664) (#("isi" 0 3 (fontified nil)) . -1654) (1654 . 1657) (#("isinstance" 0 10 (fontified nil)) . -1654) (1654 . 1664) (#("isin" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1654) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) 1658) nil (26368 25189 272513 700000) 0 nil])
([nil nil ((1664 . 1671)) nil (26368 25189 272512 307000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1670) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) 1671) nil (26368 25189 272511 906000) 0 nil])
([nil nil ((1670 . 1674)) nil (26368 25189 272510 704000) 0 nil])
([nil nil ((1665 . 1677) (#("sta" 0 3 (fontified nil)) . -1665) (1665 . 1668) (#("state_values" 0 12 (fontified nil)) . -1665) (1665 . 1677) (#("state_val" 0 9 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1665) (undo-tree-id836 . -9) (undo-tree-id837 . -9) (undo-tree-id838 . -9) (undo-tree-id839 . -9) 1674) nil (26368 25189 272510 133000) 0 nil])
([nil nil ((1677 . 1679)) nil (26368 25189 272508 550000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . 1678) (undo-tree-id834 . -1) (undo-tree-id835 . -1) 1679) nil (26368 25189 272508 139000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1676) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#("," 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1677) (undo-tree-id832 . -1) (undo-tree-id833 . -1) 1678) nil (26368 25189 272505 745000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1655) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1656) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1657) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1658) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1659) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1660) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1661) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (#("c" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1662) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (#("e" 0 1 (face py-builtins-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1663) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1664) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("s" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1665) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#("t" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1666) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (#("a" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1667) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (#("t" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1668) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (#("e" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1669) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (#("_" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1670) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (#("v" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1671) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (#("a" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1672) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("l" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1673) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (#("u" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1674) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (#("e" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9))) . -1675) (undo-tree-id828 . -1) (undo-tree-id829 . -1) 1676) nil (26368 25189 272501 367000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1654) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) 1655) nil (26368 25189 272453 336000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1653) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) 1654) nil (26368 25189 272451 612000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1650) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (#("o" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1651) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1652) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) 1653) nil (26368 25189 272449 308000) 0 nil])
([nil nil ((1650 . 1655)) nil (26368 25189 272408 551000) 0 nil])
([nil nil ((1650 . 1662) (#("sta" 0 3 (fontified nil)) . -1650) (1650 . 1653) (#("state_values" 0 12 (fontified nil)) . -1650) (1650 . 1662) (#("state" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1650) (undo-tree-id729 . -5) (undo-tree-id730 . -5) (undo-tree-id731 . -5) (undo-tree-id732 . -5) 1655) nil (26368 25189 272407 559000) 0 nil])
([nil nil ((1662 . 1677)) nil (26368 25189 272404 864000) 0 nil])
([nil nil ((1677 . 1686) (#("DIMENSION" 0 9 (fontified nil)) . -1677) (1677 . 1686)) nil (26368 25189 272404 473000) 0 nil])
([nil nil ((1686 . 1693)) nil (26368 25189 272404 103000) 0 nil])
([nil nil ((1693 . 1702) (#("DIMENSION" 0 9 (fontified nil)) . -1693) (1693 . 1702)) nil (26368 25189 272403 802000) 0 nil])
([nil nil ((1702 . 1703)) nil (26368 25189 272403 461000) 0 nil])
([nil nil ((1703 . 1704)) nil (26368 25189 272403 211000) 0 nil])
([nil nil ((1704 . 1717)) nil (26368 25189 272402 960000) 0 nil])
([nil nil ((1717 . 1723)) nil (26368 25189 272402 710000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 0))) . 1722) (undo-tree-id728 . -1) 1723) nil (26368 25189 272402 299000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 0))) . -1718) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("u" 0 1 (fontified t match-data (0 0))) . -1719) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -1720) (undo-tree-id726 . -1) (#("e" 0 1 (fontified t match-data (0 0))) . -1721) (undo-tree-id727 . -1) 1722) nil (26368 25189 272401 448000) 0 nil])
([nil nil ((1718 . 1719)) nil (26368 25189 272398 402000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 0))) . -1718) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) 1719) nil (26368 25189 272398 91000) 0 nil])
([nil nil ((1718 . 1721)) nil (26368 25189 272396 638000) 0 nil])
([nil nil ((1717 . 1722) (#("rai" 0 3 (fontified nil)) . -1717) (1717 . 1720) (#("raise" 0 5 (fontified nil)) . -1717) (1717 . 1722) (#("rais" 0 4 (fontified t match-data (0 0))) . -1717) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) 1721) nil (26368 25189 272395 987000) 0 nil])
([nil nil ((1722 . 1726)) nil (26368 25189 272394 564000) 0 nil])
([nil nil ((1723 . 1733) (#("Val" 0 3 (fontified nil)) . -1723) (1723 . 1726) (#("ValueError" 0 10 (fontified nil)) . -1723) (1723 . 1733) (#("Val" 0 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1723) (undo-tree-id706 . -3) (undo-tree-id707 . -3) (undo-tree-id708 . -3) (undo-tree-id709 . -3) 1726) nil (26368 25189 272393 933000) 0 nil])
([nil nil ((1733 . 1735)) nil (26368 25189 272391 479000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -1734) (undo-tree-id704 . -1) (undo-tree-id705 . -1) 1735) nil (26368 25189 272391 158000) 0 nil])
([nil nil ((1734 . 1755)) nil (26368 25189 272390 347000) 0 nil])
([nil nil ((1755 . 1765)) nil (26368 25189 272390 86000) 0 nil])
([nil nil ((1765 . 1774) (#("DIMENSION" 0 9 (fontified nil)) . -1765) (1765 . 1774)) nil (26368 25189 272389 725000) 0 nil])
([nil nil ((1774 . 1778)) nil (26368 25189 272389 395000) 0 nil])
([nil nil ((1778 . 1782)) nil (26368 25189 272389 114000) 0 nil])
([nil nil ((1782 . 1791) (#("DIMENSION" 0 9 (fontified nil)) . -1782) (1782 . 1791)) nil (26368 25189 272388 443000) 0 nil])
([nil nil ((1791 . 1792)) nil (26368 25189 272388 102000) 0 nil])
([nil nil ((1792 . 1801)) nil (26368 25189 272387 942000) 0 nil])
([nil nil ((1801 . 1810)) nil (26368 25189 272387 681000) 0 nil])
([nil nil ((1803 . 1811) (#("        " 0 8 (fontified nil match-data (0 0))) . 1802) (undo-tree-id703 . -8) (1810 . 1811)) nil (26368 25189 272387 70000) 0 nil])
([nil nil ((1811 . 1828)) nil (26368 25189 272386 379000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 0))) . -1825) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("e" 0 1 (fontified t match-data (0 0))) . -1826) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#("l" 0 1 (fontified t match-data (0 0))) . -1827) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) 1828) nil (26368 25189 272385 598000) 0 nil])
([nil nil ((1825 . 1828)) nil (26368 25189 272378 484000) 0 nil])
([nil nil ((1825 . 1837) (#("st" 0 2 (fontified nil)) . -1825) (1825 . 1827) (#("state_values" 0 12 (fontified nil)) . -1825) (1825 . 1837) (#("ste" 0 3 (fontified t match-data (0 0))) . -1825) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -3) (undo-tree-id671 . -3) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) 1828) nil (26368 25189 272374 116000) 0 nil])
([nil nil ((338 . 339) (t 26371 56405 837782 941000)) nil (26372 26686 638634 120000) 0 nil])
([nil nil ((338 . 346)) nil (26372 26686 638633 241000) 0 nil])
([nil nil ((346 . 355)) nil (26372 26686 638632 528000) 0 nil])
([nil nil ((355 . 369)) nil (26372 26686 638631 851000) 0 nil])
([nil nil ((365 . 373) (#("ini" 0 3 (fontified nil)) . -365) (365 . 368) (#("initGrid" 0 8 (fontified nil)) . -365) (365 . 373) (#("init" 0 4 (fontified t)) . -365) (undo-tree-id0 . -4) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) 369) nil (26372 26686 638627 370000) 0 nil])
([nil nil ((373 . 375)) nil (26372 26686 638367 239000) 0 nil])
([nil nil ((19 . 20) (t 26372 26686 759834 27000)) nil (26372 27607 985563 847000) 0 nil])
([nil nil ((20 . 29)) nil (26372 27607 985563 181000) 0 nil])
([nil nil ((25 . 38) (#("rl_s" 0 4 (fontified nil)) . -25) (25 . 29) (#("rl_statevalue" 0 13 (fontified nil)) . -25) (25 . 38) (#("rl_s" 0 4 (fontified t)) . -25) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) 29) nil (26372 27607 985562 3000) 0 nil])
([nil nil ((38 . 56)) nil (26372 27607 985558 888000) 0 nil])
([nil nil ((52 . 61) (#("Dir" 0 3 (fontified nil)) . -52) (52 . 55) (#("Direction" 0 9 (fontified nil)) . -52) (52 . 61) (#("Dire" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -52) (undo-tree-id99 . -4) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) 56) nil (26372 27607 985553 114000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 39) (#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 39) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 39) (#("g" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 39) (#("A" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 39) (t 26372 27608 110282 704000)) nil (26372 27703 445881 940000) 0 nil])
([nil nil ((39 . 48)) nil (26372 27703 445876 376000) 0 nil])
([nil nil ((385 . 393) (#("        " 0 8 (fontified nil)) . 384) (undo-tree-id393 . -8) (383 . 393) (t 26372 27703 571237 641000)) nil (26372 27795 653435 333000) 0 nil])
([nil nil ((393 . 394)) nil (26372 27795 653433 883000) 0 nil])
([nil nil ((394 . 412)) nil (26372 27795 653433 455000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 411) (undo-tree-id392 . -1) 412) nil (26372 27795 653432 885000) 0 nil])
([nil nil ((411 . 430)) nil (26372 27795 653431 751000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 429) (undo-tree-id391 . -1) 430) nil (26372 27795 653431 249000) 0 nil])
([nil nil ((429 . 434)) nil (26372 27795 653430 286000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-comment-face fontified t)) . -431) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("I" 0 1 (face font-lock-comment-face fontified t)) . -432) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#("M" 0 1 (face font-lock-comment-face fontified t)) . -433) (undo-tree-id390 . -1) 434) nil (26372 27795 653429 407000) 0 nil])
([nil nil ((431 . 436)) nil (26372 27795 653425 984000) 0 nil])
([nil nil ((436 . 448)) nil (26372 27795 653425 598000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 447) (undo-tree-id383 . -1) 448) nil (26372 27795 653425 28000) 0 nil])
([nil nil ((447 . 448)) nil (26372 27795 653423 989000) 0 nil])
([nil nil ((448 . 461)) nil (26372 27795 653423 549000) 0 nil])
([nil nil ((461 . 470)) nil (26372 27795 653423 117000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 470)) nil (26372 27795 653422 543000) 0 nil])
([nil nil ((462 . 470) (#("                " 0 8 (fontified t) 8 16 (fontified t)) . 462) (undo-tree-id379 . -8) (undo-tree-id380 . -8) (undo-tree-id381 . -8) (undo-tree-id382 . -8) 470) nil (26372 27795 653421 876000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -484) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#("e" 0 1 (fontified t)) . -485) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#("l" 0 1 (fontified t)) . -486) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -487) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("." 0 1 (fontified t)) . -488) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -489) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -490) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -491) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -492) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("G" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -493) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -494) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -495) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -496) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -497) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -498) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) 499) nil (26372 27795 653416 933000) 0 nil])
([nil nil ((484 . 493)) nil (26372 27795 653342 726000) 0 nil])
([nil nil ((493 . 494)) nil (26372 27795 653342 345000) 0 nil])
([nil nil ((494 . 515)) nil (26372 27795 653341 955000) 0 nil])
([nil nil ((515 . 536)) nil (26372 27795 653341 540000) 0 nil])
([nil nil ((536 . 537)) nil (26372 27795 653341 100000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 536) (undo-tree-id318 . -1) 537) nil (26372 27795 653340 578000) 0 nil])
([nil nil ((536 . 537)) nil (26372 27795 653339 689000) 0 nil])
([nil nil ((537 . 544)) nil (26372 27795 653339 266000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -542) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("o" 0 1 (fontified t)) . -543) (undo-tree-id316 . -1) (undo-tree-id317 . -1) 544) nil (26372 27795 653338 660000) 0 nil])
([nil nil ((542 . 548)) nil (26372 27795 653336 290000) 0 nil])
([nil nil ((548 . 563)) nil (26372 27795 653335 648000) 0 nil])
([nil nil ((563 . 575)) nil (26372 27795 653334 986000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -567) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("n" 0 1 (fontified t)) . -568) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("s" 0 1 (fontified t)) . -569) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("i" 0 1 (fontified t)) . -570) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("o" 0 1 (fontified t)) . -571) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("n" 0 1 (fontified t)) . -572) (undo-tree-id312 . -1) (undo-tree-id313 . -1) 573) nil (26372 27795 653333 599000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -564) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#("i" 0 1 (fontified t)) . -565) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("m" 0 1 (fontified t)) . -566) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 567) nil (26372 27795 653327 357000) 0 nil])
([nil nil ((564 . 570)) nil (26372 27795 653323 751000) 0 nil])
([nil nil ((569 . 578) (#("D" 0 1 (fontified nil)) . -569) (569 . 570) (#("DIMENSION" 0 9 (fontified nil)) . -569) (569 . 578) (#("D" 0 1 (fontified t)) . -569) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) 570) nil (26372 27795 653322 845000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -540) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("n" 0 1 (fontified t)) . -541) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (#("s" 0 1 (fontified t)) . -542) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("i" 0 1 (fontified t)) . -543) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (#("o" 0 1 (fontified t)) . -544) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("n" 0 1 (fontified t)) . -545) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) 546) nil (26372 27795 653319 692000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -537) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("i" 0 1 (fontified t)) . -538) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("m" 0 1 (fontified t)) . -539) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) 540) nil (26372 27795 653311 73000) 0 nil])
([nil nil ((537 . 545)) nil (26372 27795 653306 994000) 0 nil])
([nil nil ((542 . 551) (#("Di" 0 2 (fontified nil)) . -542) (542 . 544) (#("DIMENSION" 0 9 (fontified nil)) . -542) (542 . 551) (#("Dim" 0 3 (fontified t)) . -542) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3) 545) nil (26372 27795 653305 892000) 0 nil])
([nil nil ((551 . 552)) nil (26372 27795 653302 975000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -551) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) 552) nil (26372 27795 653298 392000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -495) (undo-tree-id396 . -1) (undo-tree-id397 . -1) 496 (t 26372 27795 787195 52000)) nil (26372 27821 694929 557000) 0 nil])
([nil nil ((495 . 496)) nil (26372 27821 694927 526000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -495) (undo-tree-id395 . -1) 496) nil (26372 27821 694926 716000) 0 nil])
([nil nil ((495 . 508)) nil (26372 27821 694924 583000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -507) (undo-tree-id394 . -1) 508) nil (26372 27821 694922 965000) 0 nil])
([nil nil ((507 . 528)) nil (26372 27821 694914 41000) 0 nil])
([nil nil ((528 . 530)) nil (26372 27821 694909 454000) 0 nil])
([nil nil ((891 . 900) (t 26372 27821 819183 175000)) nil (26372 27854 523276 745000) 0 nil])
([nil nil ((900 . 907)) nil (26372 27854 523276 98000) 0 nil])
([nil nil ((907 . 916)) nil (26372 27854 523275 572000) 0 nil])
([nil nil ((916 . 937)) nil (26372 27854 523275 182000) 0 nil])
([nil nil ((937 . 946)) nil (26372 27854 523274 577000) 0 nil])
([nil nil ((946 . 955)) nil (26372 27854 523273 543000) 0 nil])
([nil nil ((955 . 973)) nil (26372 27854 523268 879000) 0 nil])
([nil nil ((541 . 546) (t 26372 27854 656168 274000)) nil (26372 27872 368141 90000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -541) (undo-tree-id398 . -1) (#("n" 0 1 (fontified t)) . -542) (undo-tree-id399 . -1) (#("a" 0 1 (fontified t)) . -543) (undo-tree-id400 . -1) (#("m" 0 1 (fontified t)) . -544) (undo-tree-id401 . -1) (#("e" 0 1 (fontified t)) . -545) (undo-tree-id402 . -1) 546 (t 26372 27872 388160 265000)) nil (26372 27881 17057 530000) 0 nil])
([nil nil ((493 . 498)) nil (26372 27881 17043 555000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -513) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (#("S" 0 1 (fontified t)) . -514) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (#("I" 0 1 (fontified nil)) . -515) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (#("O" 0 1 (fontified t)) . -516) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (#("N" 0 1 (fontified t)) . -517) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#("*" 0 1 (fontified t)) . -518) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#("s" 0 1 (fontified t)) . -519) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#("e" 0 1 (fontified t)) . -520) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#("l" 0 1 (fontified t)) . -521) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -522) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("." 0 1 (fontified t)) . -523) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#("D" 0 1 (fontified t)) . -524) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("I" 0 1 (fontified t)) . -525) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("M" 0 1 (fontified t)) . -526) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#("E" 0 1 (fontified t)) . -527) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("N" 0 1 (fontified t)) . -528) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("S" 0 1 (fontified t)) . -529) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("I" 0 1 (fontified t)) . -530) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("O" 0 1 (fontified t)) . -531) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (#("N" 0 1 (fontified t)) . -532) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -533) (undo-tree-id522 . -1) (undo-tree-id523 . -1) 534 (t 26372 27881 142156 320000)) nil (26372 27959 605727 160000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -503) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("s" 0 1 (fontified t)) . -504) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("e" 0 1 (fontified t)) . -505) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("l" 0 1 (fontified t)) . -506) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -507) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#("." 0 1 (fontified t)) . -508) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("D" 0 1 (fontified t)) . -509) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("I" 0 1 (fontified t)) . -510) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("M" 0 1 (fontified t)) . -511) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (#("E" 0 1 (fontified t)) . -512) (undo-tree-id480 . -1) (undo-tree-id481 . -1) 513) nil (26372 27959 605705 267000) 0 nil])
([nil nil ((503 . 508)) nil (26372 27959 605353 39000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -503) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("e" 0 1 (fontified t)) . -504) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#("l" 0 1 (fontified t)) . -505) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -506) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("." 0 1 (fontified t)) . -507) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) 508) nil (26372 27959 605351 774000) 0 nil])
([nil nil ((503 . 519)) nil (26372 27959 605344 55000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -514) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#("n" 0 1 (fontified t)) . -515) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("g" 0 1 (fontified t)) . -516) (undo-tree-id444 . -1) (#("t" 0 1 (fontified t)) . -517) (undo-tree-id445 . -1) (#("h" 0 1 (fontified t)) . -518) (undo-tree-id446 . -1) 519) nil (26372 27959 605342 691000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -503) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (#("i" 0 1 (fontified t)) . -504) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("r" 0 1 (fontified t)) . -505) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("e" 0 1 (fontified t)) . -506) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("c" 0 1 (fontified t)) . -507) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("t" 0 1 (fontified t)) . -508) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("i" 0 1 (fontified t)) . -509) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("o" 0 1 (fontified t)) . -510) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (#("n" 0 1 (fontified t)) . -511) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("." 0 1 (fontified t)) . -512) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (#("l" 0 1 (fontified t)) . -513) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 514) nil (26372 27959 605336 603000) 0 nil])
([nil nil ((503 . 519)) nil (26372 27959 605318 862000) 0 nil])
([nil nil ((#("^" 0 1 (fontified t)) . -517) (undo-tree-id403 . -1) (undo-tree-id404 . -1) 518) nil (26372 27959 605317 312000) 0 nil])
([nil nil ((517 . 519)) nil (26372 27959 605304 798000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -518) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) 519 (t 26372 27959 730201 741000)) nil (26372 28016 507288 937000) 0 nil])
([nil nil ((#("2" 0 1 (face py-number-face fontified t)) . 518) (undo-tree-id652 . -1)) nil (26372 28016 507267 54000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -517) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) 518) nil (26372 28016 507259 576000) 0 nil])
([nil nil ((935 . 936) (t 26373 5258 144998 834000)) nil (26373 5826 52468 2000) 0 nil])
([nil nil ((#("k        print(self.policy)" 0 9 (fontified t) 9 14 (face py-builtins-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 19 (face py-object-reference-face fontified t) 19 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t)) . 935) (undo-tree-id26 . -27) (undo-tree-id27 . -27) (undo-tree-id28 . -27) (undo-tree-id29 . -27) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1)) nil (26373 5826 52467 441000) 0 nil])
([nil nil ((935 . 943)) nil (26373 5826 52465 127000) 0 nil])
([nil nil ((943 . 960)) nil (26373 5826 52464 977000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -958) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("u" 0 1 (fontified t)) . -959) (undo-tree-id25 . -1) 960) nil (26373 5826 52464 355000) 0 nil])
([nil nil ((958 . 965)) nil (26373 5826 52459 757000) 0 nil])
([nil nil ((965 . 975)) nil (26373 5826 52459 516000) 0 nil])
([nil nil ((971 . 977) (#("po" 0 2 (fontified nil)) . -971) (971 . 973) (#("policy" 0 6 (fontified nil)) . -971) (971 . 977) (#("poli" 0 4 (fontified t)) . -971) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) 975) nil (26373 5826 52458 715000) 0 nil])
([nil nil ((977 . 978)) nil (26373 5826 52456 962000) 0 nil])
([nil nil ((978 . 979)) nil (26373 5826 52456 561000) 0 nil])
([nil nil ((979 . 992)) nil (26373 5826 52456 290000) 0 nil])
([nil nil ((992 . 1008)) nil (26373 5826 52456 10000) 0 nil])
([nil nil ((#("{" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1006) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("}" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1007) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 1008) nil (26373 5826 52455 148000) 0 nil])
([nil nil ((1006 . 1007)) nil (26373 5826 52453 645000) 0 nil])
([nil nil ((1007 . 1008)) nil (26373 5826 52453 425000) 0 nil])
([nil nil ((1008 . 1009)) nil (26373 5826 52453 4000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1008) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 1009) nil (26373 5826 52452 483000) 0 nil])
([nil nil ((1008 . 1010)) nil (26373 5826 52451 551000) 0 nil])
([nil nil ((1010 . 1023)) nil (26373 5826 52451 291000) 0 nil])
([nil nil ((1023 . 1044)) nil (26373 5826 52451 30000) 0 nil])
([nil nil ((1044 . 1054)) nil (26373 5826 52450 780000) 0 nil])
([nil nil ((1054 . 1059)) nil (26373 5826 52450 429000) 0 nil])
([nil nil ((1059 . 1060)) nil (26373 5826 52450 109000) 0 nil])
([nil nil ((1060 . 1077)) nil (26373 5826 52449 868000) 0 nil])
([nil nil ((1077 . 1094)) nil (26373 5826 52449 417000) 0 nil])
([nil nil ((#("{" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1093) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 1094) nil (26373 5826 52448 796000) 0 nil])
([nil nil ((1093 . 1095)) nil (26373 5826 52446 943000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1094) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 1095) nil (26373 5826 52446 241000) 0 nil])
([nil nil ((1094 . 1095)) nil (26373 5826 52444 869000) 0 nil])
([nil nil ((1095 . 1097)) nil (26373 5826 52444 588000) 0 nil])
([nil nil ((1097 . 1098)) nil (26373 5826 52444 57000) 0 nil])
([nil nil ((1098 . 1100)) nil (26373 5826 52443 636000) 0 nil])
([nil nil ((1100 . 1117)) nil (26373 5826 52443 196000) 0 nil])
([nil nil ((1117 . 1128)) nil (26373 5826 52442 825000) 0 nil])
([nil nil ((1124 . 1135) (#("pol" 0 3 (fontified nil)) . -1124) (1124 . 1127) (#("policy_dict" 0 11 (fontified nil)) . -1124) (1124 . 1135) (#("poli" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1124) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4) 1128) nil (26373 5826 52441 442000) 0 nil])
([nil nil ((1135 . 1138)) nil (26373 5826 52438 627000) 0 nil])
([nil nil ((1138 . 1148)) nil (26373 5826 52438 346000) 0 nil])
([nil nil ((1148 . 1165)) nil (26373 5826 52437 996000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1161) (undo-tree-id2 . -4) 1165) nil (26373 5826 52437 375000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1157) (undo-tree-id1 . -4) 1161) nil (26373 5826 52436 152000) 0 nil])
([nil nil ((1149 . 1161) (#("        " 0 8 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1149) (undo-tree-id0 . -8) 1157) nil (26373 5826 52434 449000) 0 nil])
([nil nil ((1161 . 1168)) nil (26373 5826 52401 657000) 0 nil])
([nil nil ((65 . 66) (t 26373 5826 57157 992000)) nil (26373 5838 279927 312000) 0 nil])
([nil nil ((66 . 87)) nil (26373 5838 279926 470000) 0 nil])
([nil nil ((87 . 91)) nil (26373 5838 279925 829000) 0 nil])
([nil nil ((85 . 91) (#("ppr" 0 3 (fontified nil)) . -85) (85 . 88) (#("pprint" 0 6 (fontified t)) . -85) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) 91) nil (26373 5838 279921 721000) 0 nil])
([nil nil ((#("4" 0 1 (face py-number-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1172) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 1173 (t 26373 5838 284260 86000)) nil (26373 5918 633052 899000) 0 nil])
([nil nil ((1172 . 1173)) nil (26373 5918 633024 516000) 0 nil])
([nil nil ((#("       for i,row in enumerate(self.policy):
            print(f\"Row {i}:\")
            for j, policy_dict in enumerate(row):
                print(f\"  Column {j}:\")
                pprint(policy_dict, indent = 5)
            print()" 0 7 (fontified t) 7 10 (face font-lock-keyword-face fontified t) 10 17 (fontified t) 17 19 (face font-lock-keyword-face fontified t) 19 20 (fontified t) 20 29 (face py-builtins-face fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 34 (face py-object-reference-face fontified t) 34 35 (fontified t) 35 41 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 42 44 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 44 56 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 56 61 (face py-builtins-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 61 62 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 62 63 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 63 73 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 73 74 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 74 75 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 75 87 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 87 90 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 90 106 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 106 108 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 108 109 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 109 118 (face py-builtins-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 118 119 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 119 122 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 122 123 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 123 125 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 125 141 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 141 146 (face py-builtins-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 146 147 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 147 148 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 148 163 (face font-lock-string-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 163 164 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 164 165 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 165 187 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 187 188 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 188 201 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 201 210 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 210 211 (face py-number-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 211 212 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 212 213 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 213 225 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 225 230 (face py-builtins-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 230 231 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 231 232 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 962) (undo-tree-id96 . -232) (undo-tree-id97 . -231) (undo-tree-id98 . -210) (undo-tree-id99 . 21) (undo-tree-id100 . -141) (undo-tree-id101 . -232) (undo-tree-id102 . -232) (t 26373 5918 643924 697000)) nil (26373 6054 180731 22000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -961) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 962) nil (26373 6054 180728 838000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -960) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 961) nil (26373 6054 180726 424000) 0 nil])
([nil nil ((960 . 969)) nil (26373 6054 180719 681000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1727 . 1728) (nil fontified nil 969 . 1728) (969 . 1728)) nil (26373 6054 180719 370000) 0 nil])
([nil nil ((961 . 969) (#("            " 0 8 (fontified t) 8 12 (fontified t)) . 961) (undo-tree-id77 . -8)) nil (26373 6054 180718 789000) 0 nil])
([nil nil ((989 . 997) (#("    " 0 4 (fontified t)) . 989) 997) nil (26373 6054 180711 816000) 0 nil])
([nil nil ((1029 . 1041) (#("        " 0 8 (fontified t)) . 1029) 1041) nil (26373 6054 180711 305000) 0 nil])
([nil nil ((1057 . 1069) (#("        " 0 8 (fontified t)) . 1057) 1073) nil (26373 6054 180710 784000) 0 nil])
([nil nil ((1103 . 1115) (#("        " 0 8 (fontified t)) . 1103) 1123) nil (26373 6054 180709 973000) 0 nil])
([nil nil ((1147 . 1163) (#("            " 0 12 (fontified t)) . 1147) 1171) nil (26373 6054 180709 342000) 0 nil])
([nil nil ((1216 . 1232) (#("            " 0 12 (fontified t)) . 1216) 1244) nil (26373 6054 180708 590000) 0 nil])
([nil nil ((1264 . 1280)) nil (26373 6054 180708 280000) 0 nil])
([nil nil ((1281 . 1297) (#("            " 0 12 (fontified t)) . 1281) 1297) nil (26373 6054 180707 668000) 0 nil])
([nil nil ((1389 . 1405) (#("            " 0 12 (fontified t)) . 1389) 1409) nil (26373 6054 180707 127000) 0 nil])
([nil nil ((1503 . 1519)) nil (26373 6054 180706 797000) 0 nil])
([nil nil ((1520 . 1536) (#("            " 0 12 (fontified t)) . 1520) 1536) nil (26373 6054 180706 366000) 0 nil])
([nil nil ((1596 . 1612) (#("            " 0 12 (fontified t)) . 1596) 1616) nil (26373 6054 180705 895000) 0 nil])
([nil nil ((1687 . 1703)) nil (26373 6054 180705 534000) 0 nil])
([nil nil ((1704 . 1716) (#("        " 0 8 (fontified t)) . 1704) 1720) nil (26373 6054 180704 833000) 0 nil])
([nil nil ((1732 . 1744) (#("        " 0 8 (fontified t)) . 1732) 1752) nil (26373 6054 180704 142000) 0 nil])
([nil nil ((1762 . 1774) (#("        " 0 8 (fontified t)) . 1762) 1786) nil (26373 6054 180699 623000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-string-face fontified t)) . -1437) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1438) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1439) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -1440) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1441) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) 1442 (t 26373 6054 186023 997000)) nil (26373 6106 458365 326000) 0 nil])
([nil nil ((#("3" 0 1 (face py-number-face fontified t)) . -1648) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) 1649 (t 26373 6106 467441 913000)) nil (26373 6156 923120 446000) 0 nil])
([nil nil ((1648 . 1649)) nil (26373 6156 923088 115000) 0 nil])
([nil nil ((1943 . 1946) (t 26373 6156 931842 555000)) nil (26373 19829 114209 729000) 0 nil])
([nil nil ((2574 . 2582) (#("        " 0 8 (fontified nil)) . 2573) (undo-tree-id499 . -8) (2572 . 2582)) nil (26373 19829 114209 378000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2578) (undo-tree-id498 . -4) 2582) nil (26373 19829 114208 557000) 0 nil])
([nil nil ((#("O" 0 1 (face py-def-face fontified t)) . -1943) (undo-tree-id495 . -1) (#("l" 0 1 (face py-def-face fontified t)) . -1944) (undo-tree-id496 . -1) (#("d" 0 1 (face py-def-face fontified t)) . -1945) (undo-tree-id497 . -1) 1946) nil (26373 19829 114207 194000) 0 nil])
([nil nil ((1943 . 1949)) nil (26373 19829 114206 2000) 0 nil])
([nil nil ((2581 . 2602)) nil (26373 19829 114205 761000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2599) (undo-tree-id492 . -1) (#("f" 0 1 (fontified t)) . -2600) (undo-tree-id493 . -1) (#("," 0 1 (fontified t)) . -2601) (undo-tree-id494 . -1) 2602) nil (26373 19829 114205 10000) 0 nil])
([nil nil ((2599 . 2606)) nil (26373 19829 114203 627000) 0 nil])
([nil nil ((2606 . 2607)) nil (26373 19829 114203 377000) 0 nil])
([nil nil ((2607 . 2618)) nil (26373 19829 114203 126000) 0 nil])
([nil nil ((2618 . 2628)) nil (26373 19829 114202 756000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2624) (undo-tree-id488 . -1) (#("o" 0 1 (fontified t)) . -2625) (undo-tree-id489 . -1) (#("a" 0 1 (fontified t)) . -2626) (undo-tree-id490 . -1) (#("l" 0 1 (fontified t)) . -2627) (undo-tree-id491 . -1) 2628) nil (26373 19829 114201 934000) 0 nil])
([nil nil ((2624 . 2634)) nil (26373 19829 114200 101000) 0 nil])
([nil nil ((2634 . 2635)) nil (26373 19829 114199 860000) 0 nil])
([nil nil ((2635 . 2648)) nil (26373 19829 114199 610000) 0 nil])
([nil nil ((2648 . 2649)) nil (26373 19829 114199 279000) 0 nil])
([nil nil ((2649 . 2653)) nil (26373 19829 114199 9000) 0 nil])
([nil nil ((2653 . 2660)) nil (26373 19829 114198 768000) 0 nil])
([nil nil ((#("_" 0 1 (face py-builtins-face fontified t)) . -2659) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 2660) nil (26373 19829 114198 347000) 0 nil])
([nil nil ((2659 . 2661)) nil (26373 19829 114196 955000) 0 nil])
([nil nil ((2661 . 2666)) nil (26373 19829 114196 714000) 0 nil])
([nil nil ((2666 . 2667)) nil (26373 19829 114196 464000) 0 nil])
([nil nil ((2667 . 2676)) nil (26373 19829 114196 213000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2991 . 2992) (nil fontified nil 2676 . 2992) (2676 . 2992)) nil (26373 19829 114195 682000) 0 nil])
([nil nil ((2681 . 2689) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2681) (undo-tree-id483 . -4) 2685) nil (26373 19829 114195 101000) 0 nil])
([nil nil ((2730 . 2738) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2730) 2738) nil (26373 19829 114194 320000) 0 nil])
([nil nil ((2750 . 2758) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2750) 2762) nil (26373 19829 114193 699000) 0 nil])
([nil nil ((2831 . 2839) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2831) 2847) nil (26373 19829 114193 258000) 0 nil])
([nil nil ((2907 . 2915) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2907) 2927) nil (26373 19829 114192 767000) 0 nil])
([nil nil ((3005 . 3013) (#("    " 0 4 (face font-lock-string-face fontified t)) . 3005) 3012) nil (26373 19829 114191 625000) 0 nil])
([nil nil ((3018 . 3026) (#("        " 0 8 (fontified nil)) . 3017) (undo-tree-id482 . -8) (3016 . 3026)) nil (26373 19829 114190 823000) 0 nil])
([nil nil ((3026 . 3035)) nil (26373 19829 114188 499000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3033) (undo-tree-id480 . -1) (#("." 0 1 (fontified t)) . -3034) (undo-tree-id481 . -1) 3035) nil (26373 19829 114187 988000) 0 nil])
([nil nil ((3033 . 3045)) nil (26373 19829 114187 186000) 0 nil])
([nil nil ((3045 . 3046)) nil (26373 19829 114186 906000) 0 nil])
([nil nil ((3046 . 3059)) nil (26373 19829 114186 645000) 0 nil])
([nil nil ((3059 . 3068)) nil (26373 19829 114186 335000) 0 nil])
([nil nil ((3065 . 3077) (#("Run" 0 3 (fontified nil)) . -3065) (3065 . 3068) (#("RuntimeError" 0 12 (fontified nil)) . -3065) (3065 . 3077) (#("Run" 0 3 (fontified t)) . -3065) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) 3068) nil (26373 19829 114185 644000) 0 nil])
([nil nil ((3077 . 3089)) nil (26373 19829 114184 141000) 0 nil])
([nil nil ((3089 . 3090)) nil (26373 19829 114183 900000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3088) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("v" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3089) (undo-tree-id474 . -1) (undo-tree-id475 . -1) 3090) nil (26373 19829 114183 389000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3087) (undo-tree-id470 . -1) (undo-tree-id471 . -1) 3088) nil (26373 19829 114181 906000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . 3086) (undo-tree-id468 . -1) (undo-tree-id469 . -1) 3087) nil (26373 19829 114180 654000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3079) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#("e" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3080) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("w" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3081) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("a" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3082) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#("r" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3083) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("d" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3084) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("s" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3085) (undo-tree-id466 . -1) (undo-tree-id467 . -1) 3086) nil (26373 19829 114178 290000) 0 nil])
([nil nil ((3079 . 3091)) nil (26373 19829 114172 889000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3089) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("a" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3090) (undo-tree-id452 . -1) (undo-tree-id453 . -1) 3091) nil (26373 19829 114172 368000) 0 nil])
([nil nil ((3089 . 3090)) nil (26373 19829 114170 625000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3088) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("e" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -3089) (undo-tree-id448 . -1) (undo-tree-id449 . -1) 3090) nil (26373 19829 114169 944000) 0 nil])
([nil nil ((3088 . 3109)) nil (26373 19829 114168 341000) 0 nil])
([nil nil ((3109 . 3113)) nil (26373 19829 114168 100000) 0 nil])
([nil nil ((3113 . 3134)) nil (26373 19829 114167 810000) 0 nil])
([nil nil ((3134 . 3155)) nil (26373 19829 114167 539000) 0 nil])
([nil nil ((3155 . 3157)) nil (26373 19829 114167 269000) 0 nil])
([nil nil ((3157 . 3166)) nil (26373 19829 114166 898000) 0 nil])
([nil nil ((3166 . 3171)) nil (26373 19829 114166 638000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -3169) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -3170) (undo-tree-id445 . -1) 3171) nil (26373 19829 114165 926000) 0 nil])
([nil nil ((3169 . 3182)) nil (26373 19829 114163 722000) 0 nil])
([nil nil ((3178 . 3184) (#("goa" 0 3 (fontified nil)) . -3178) (3178 . 3181) (#("global" 0 6 (fontified nil)) . -3178) (3178 . 3184) (#("goal" 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . -3178) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) 3182) nil (26373 19829 114163 1000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3179) (undo-tree-id432 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3180) (undo-tree-id433 . -1) (#("b" 0 1 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3181) (undo-tree-id434 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3182) (undo-tree-id435 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3183) (undo-tree-id436 . -1) 3184) nil (26373 19829 114159 464000) 0 nil])
([nil nil ((3179 . 3183)) nil (26373 19829 114157 100000) 0 nil])
([nil nil ((3183 . 3191) (#(" " 0 1 (fontified nil match-data (0 6 0 1 2 3 4 5 5 6))) . 3182) (undo-tree-id431 . -1) (3183 . 3184)) nil (26373 19829 114156 699000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified t)) . 3025) (#(" " 0 1 (fontified t)) . 3025)) nil (26373 19829 114155 457000) 0 nil])
([nil nil ((3025 . 3026)) nil (26373 19829 114155 156000) 0 nil])
([nil nil ((3018 . 3026) (#("       " 0 7 (fontified t)) . 3018) (undo-tree-id429 . -7) (undo-tree-id430 . -7) 3025) nil (26373 19829 114154 745000) 0 nil])
([nil nil ((2577 . 2585) (#("    " 0 4 (fontified t)) . 2577) 2599) nil (26373 19829 114153 373000) 0 nil])
([nil nil ((2672 . 2684) (#("         " 0 8 (fontified t) 8 9 (fontified t)) . 2672) (undo-tree-id428 . -8) 2682) nil (26373 19829 114152 862000) 0 nil])
([nil nil ((2688 . 2700) (#("        " 0 8 (face font-lock-string-face fontified t)) . 2688) 2697) nil (26373 19829 114152 10000) 0 nil])
([nil nil ((2741 . 2753) (#("        " 0 8 (face font-lock-string-face fontified t)) . 2741) 2751) nil (26373 19829 114151 149000) 0 nil])
([nil nil ((2765 . 2777) (#("        " 0 8 (face font-lock-string-face fontified t)) . 2765) 2776) nil (26373 19829 114150 56000) 0 nil])
([nil nil ((2850 . 2862) (#("        " 0 8 (face font-lock-string-face fontified t)) . 2850) 2861) nil (26373 19829 114149 556000) 0 nil])
([nil nil ((2930 . 2942) (#("        " 0 8 (face font-lock-string-face fontified t)) . 2930) 2941) nil (26373 19829 114149 115000) 0 nil])
([nil nil ((3032 . 3044) (#("        " 0 8 (face font-lock-string-face fontified t)) . 3032) 3041) nil (26373 19829 114148 674000) 0 nil])
([nil nil ((2577 . 2581) (#("        " 0 8 (fontified t)) . 2577) 2587) nil (26373 19829 114147 973000) 0 nil])
([nil nil ((2668 . 2676) (#("            " 0 12 (fontified t)) . 2668) (undo-tree-id427 . -12) 2680) nil (26373 19829 114147 512000) 0 nil])
([nil nil ((2732 . 2744)) nil (26373 19829 114146 941000) 0 nil])
([nil nil ((2680 . 2688) (#("            " 0 12 (face font-lock-string-face fontified t)) . 2680) (undo-tree-id426 . -12) 2692) nil (26373 19829 114146 550000) 0 nil])
([nil nil ((2741 . 2749) (#("            " 0 12 (face font-lock-string-face fontified t)) . 2741) (undo-tree-id425 . -12) 2753) nil (26373 19829 114145 638000) 0 nil])
([nil nil ((2761 . 2769) (#("            " 0 12 (face font-lock-string-face fontified t)) . 2761) (undo-tree-id424 . -12) 2773) nil (26373 19829 114144 827000) 0 nil])
([nil nil ((2842 . 2850) (#("            " 0 12 (face font-lock-string-face fontified t)) . 2842) (undo-tree-id423 . -12) 2854) nil (26373 19829 114144 35000) 0 nil])
([nil nil ((2918 . 2926) (#("            " 0 12 (face font-lock-string-face fontified t)) . 2918) (undo-tree-id422 . -11) 2929) nil (26373 19829 114143 434000) 0 nil])
([nil nil ((3016 . 3024) (#("            " 0 12 (face font-lock-string-face fontified t)) . 3016) (undo-tree-id421 . -12) 3028) nil (26373 19829 114142 582000) 0 nil])
([nil nil ((3029 . 3033) (#("        " 0 8 (fontified t)) . 3029) 3039) nil (26373 19829 114141 691000) 0 nil])
([nil nil ((3029 . 3037) (#("    " 0 4 (fontified t)) . 3029) (undo-tree-id420 . -4) 3033) nil (26373 19829 114141 29000) 0 nil])
([nil nil ((3193 . 3202)) nil (26373 19829 114140 148000) 0 nil])
([nil nil ((3202 . 3223)) nil (26373 19829 114139 707000) 0 nil])
([nil nil ((3223 . 3231)) nil (26373 19829 114139 286000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3230) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) 3231) nil (26373 19829 114138 775000) 0 nil])
([nil nil ((3230 . 3239)) nil (26373 19829 114135 800000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3238) (undo-tree-id415 . -1) 3239) nil (26373 19829 114135 419000) 0 nil])
([nil nil ((3238 . 3241)) nil (26373 19829 114134 908000) 0 nil])
([nil nil ((3241 . 3247)) nil (26373 19829 114134 637000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3246) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) 3247) nil (26373 19829 114134 207000) 0 nil])
([nil nil ((3246 . 3266)) nil (26373 19829 114132 794000) 0 nil])
([nil nil ((3266 . 3275)) nil (26373 19829 114132 73000) 0 nil])
([nil nil ((3223 . 3224)) nil (26373 19829 114131 732000) 0 nil])
([nil nil ((3276 . 3280)) nil (26373 19829 114131 381000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3279) (undo-tree-id410 . -1) 3280) nil (26373 19829 114130 660000) 0 nil])
([nil nil ((3279 . 3289)) nil (26373 19829 114129 728000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3288) (undo-tree-id409 . -1) 3289) nil (26373 19829 114128 846000) 0 nil])
([nil nil ((3288 . 3295)) nil (26373 19829 114128 125000) 0 nil])
([nil nil ((3295 . 3315)) nil (26373 19829 114127 865000) 0 nil])
([nil nil ((3309 . 3319) (#("goa" 0 3 (fontified nil)) . -3309) (3309 . 3312) (#("goal_value" 0 10 (fontified nil)) . -3309) (3309 . 3319) (#("goal_v" 0 6 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3309) (undo-tree-id405 . -6) (undo-tree-id406 . -6) (undo-tree-id407 . -6) (undo-tree-id408 . -6) 3315) nil (26373 19829 114126 853000) 0 nil])
([nil nil ((3319 . 3328)) nil (26373 19829 114123 967000) 0 nil])
([nil nil ((3328 . 3340)) nil (26373 19829 114123 416000) 0 nil])
([nil nil ((3340 . 3351)) nil (26373 19829 114122 885000) 0 nil])
([nil nil ((3347 . 3351) (#("Tru" 0 3 (fontified nil)) . -3347) (3347 . 3350) (#("True" 0 4 (face py-pseudo-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -3347) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) 3351) nil (26373 19829 114118 757000) 0 nil])
([nil nil ((2648 . 2654) (t 26373 19829 133345 97000)) nil (26373 20108 864563 524000) 0 nil])
([nil nil ((3272 . 3273)) nil (26373 20108 864563 133000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . -3272) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) 3273) nil (26373 20108 864562 31000) 0 nil])
([nil nil ((3272 . 3278)) nil (26373 20108 864538 867000) 0 nil])
([nil nil ((#("    def setRewards(self, goal: tuple[int,int], goal_value: int, default_value: int = 0) -> None:
        \"\"\"
        Sets up the reward matrix for the grid.
            
        Parameters:
        - goal: a tuple representing the coordinates of the goal (e.g., (x, y)).
        - goal_value: an integer representing the reward value at the goal.
        - default: an integer representing the default reward for all other cells (default is 0).
        \"\"\"

        if self.rewards_set:
            raise RuntimeError(\"[ERROR] Rewards have already been set. Cannot set rewards for this instance.\")
        self.Goal = goal
        self.rewards = np.full((self.DIMENSION, self.DIMENSION), default_value)
        self.rewards[goal[0], goal[1]] = goal_value
        self.rewards_set = True
        " 0 4 (fontified t) 4 7 (face py-def-class-face fontified t) 7 8 (fontified t) 8 18 (face py-def-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 23 (face py-object-reference-face fontified t) 23 31 (fontified t) 31 36 (face py-builtins-face fontified t) 36 37 (face (rainbow-delimiters-depth-2-face) fontified t) 37 40 (face py-builtins-face fontified t) 40 41 (fontified t) 41 44 (face py-builtins-face fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 59 (fontified t) 59 62 (face py-builtins-face fontified t) 62 64 (fontified t) 64 79 (fontified t) 79 82 (face py-builtins-face fontified t) 82 85 (fontified t) 85 86 (face py-number-face fontified t) 86 87 (face (rainbow-delimiters-depth-1-face) fontified t) 87 91 (fontified t) 91 95 (face py-pseudo-keyword-face fontified t) 95 97 (fontified t) 97 105 (fontified t) 105 106 (face font-lock-string-face syntax-table (15) fontified t) 106 107 (face font-lock-string-face syntax-table nil fontified t) 107 108 (face font-lock-string-face syntax-table nil fontified t) 108 109 (face font-lock-string-face fontified t) 109 117 (face font-lock-string-face fontified t) 117 157 (face font-lock-string-face fontified t) 157 169 (face font-lock-string-face fontified t) 169 170 (face font-lock-string-face fontified t) 170 178 (face font-lock-string-face fontified t) 178 190 (face font-lock-string-face fontified t) 190 198 (face font-lock-string-face fontified t) 198 271 (face font-lock-string-face fontified t) 271 279 (face font-lock-string-face fontified t) 279 347 (face font-lock-string-face fontified t) 347 355 (face font-lock-string-face fontified t) 355 445 (face font-lock-string-face fontified t) 445 453 (face font-lock-string-face fontified t) 453 454 (face font-lock-string-face syntax-table nil fontified t) 454 455 (face font-lock-string-face syntax-table nil fontified t) 455 456 (face font-lock-string-face syntax-table (15) fontified t rear-nonsticky t) 456 457 (fontified t) 457 458 (fontified t) 458 466 (fontified t) 466 467 (face font-lock-keyword-face fontified t) 467 468 (face font-lock-keyword-face fontified t) 468 469 (fontified t) 469 473 (face py-object-reference-face fontified t) 473 487 (fontified t) 487 499 (fontified t) 499 504 (face font-lock-keyword-face fontified t) 504 505 (fontified t) 505 517 (face py-exception-name-face fontified t match-data (0 3 0 1 1 2 2 3)) 517 518 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3)) 518 596 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3)) 596 597 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3)) 597 598 (fontified t match-data (0 3 0 1 1 2 2 3)) 598 606 (fontified t match-data (0 3 0 1 1 2 2 3)) 606 610 (face py-object-reference-face fontified t match-data (0 3 0 1 1 2 2 3)) 610 611 (fontified t match-data (0 3 0 1 1 2 2 3)) 611 615 (face py-variable-name-face fontified t match-data (0 3 0 1 1 2 2 3)) 615 616 (fontified t match-data (0 3 0 1 1 2 2 3)) 616 617 (face font-lock-operator-face fontified t match-data (0 3 0 1 1 2 2 3)) 617 618 (fontified t match-data (0 3 0 1 1 2 2 3)) 618 623 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 623 631 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 631 635 (face py-object-reference-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 635 636 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 636 643 (face py-variable-name-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 643 644 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 644 645 (face font-lock-operator-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 645 653 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 653 654 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 654 655 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 655 659 (face py-object-reference-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 659 671 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 671 675 (face py-object-reference-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 675 685 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 685 686 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 686 688 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 688 701 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 701 702 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 702 703 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 703 711 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 711 715 (face py-object-reference-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 715 716 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 716 723 (face py-variable-name-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 723 724 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 724 728 (face py-variable-name-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 728 729 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 729 730 (face py-number-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 730 731 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 731 733 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 733 737 (face py-variable-name-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 737 738 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 738 739 (face py-number-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 739 740 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 740 741 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 741 742 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 742 743 (face font-lock-operator-face fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 743 744 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 744 755 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 755 763 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 763 767 (face py-object-reference-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 767 768 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 768 779 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 779 780 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 780 781 (face font-lock-operator-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 781 782 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 782 786 (face py-pseudo-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 786 787 (fontified t match-data (0 6 0 1 2 3 4 5 5 6)) 787 795 (fontified t match-data (0 6 0 1 2 3 4 5 5 6))) . 2577) (undo-tree-id527 . -795) (undo-tree-id528 . -688) (undo-tree-id529 . -701) (undo-tree-id530 . -786) (undo-tree-id531 . -701) (undo-tree-id532 . -70) (undo-tree-id533 . 94) (undo-tree-id534 . -97) (undo-tree-id535 . -701) (t 26373 20108 869935 306000)) nil (26373 20161 524547 202000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3402 . 3403) (nil fontified nil 2577 . 3403) (2577 . 3403)) nil (26373 20161 524535 961000) 0 nil])
([nil nil ((2577 . 2581) 2578) nil (26373 20161 524535 611000) 0 nil])
([nil nil ((2669 . 2677) (#("    " 0 4 (fontified t)) . 2669) 2674) nil (26373 20161 524535 150000) 0 nil])
([nil nil ((2681 . 2689) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2681) 2690) nil (26373 20161 524534 689000) 0 nil])
([nil nil ((2730 . 2738) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2730) 2743) nil (26373 20161 524534 188000) 0 nil])
([nil nil ((2750 . 2758) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2750) 2767) nil (26373 20161 524533 717000) 0 nil])
([nil nil ((2831 . 2839) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2831) 2852) nil (26373 20161 524532 936000) 0 nil])
([nil nil ((2907 . 2915) (#("    " 0 4 (face font-lock-string-face fontified t)) . 2907) 2932) nil (26373 20161 524532 495000) 0 nil])
([nil nil ((3005 . 3013) (#("    " 0 4 (face font-lock-string-face fontified t)) . 3005) 3012) nil (26373 20161 524532 44000) 0 nil])
([nil nil ((3017 . 3025) (#("    " 0 4 (fontified t)) . 3017) 3028) nil (26373 20161 524531 333000) 0 nil])
([nil nil ((3046 . 3058) (#("        " 0 8 (fontified t)) . 3046) 3061) nil (26373 20161 524530 711000) 0 nil])
([nil nil ((3134 . 3142) (#("    " 0 4 (fontified t)) . 3134) 3153) nil (26373 20161 524530 260000) 0 nil])
([nil nil ((3190 . 3198) (#("    " 0 4 (fontified t)) . 3190) 3210) nil (26373 20161 524529 830000) 0 nil])
([nil nil ((3215 . 3223) (#("    " 0 4 (fontified t)) . 3215) 3239) nil (26373 20161 524529 58000) 0 nil])
([nil nil ((3294 . 3302) (#("    " 0 4 (fontified t)) . 3294) 3322) nil (26373 20161 524528 567000) 0 nil])
([nil nil ((3352 . 3360) (#("    " 0 4 (fontified t)) . 3352) 3384) nil (26373 20161 524527 996000) 0 nil])
([nil nil ((3409 . 3417) (#("    " 0 4 (fontified t)) . 3409) 3434) nil (26373 20161 524527 385000) 0 nil])
([nil nil ((3439 . 3447) (#("    " 0 4 (fontified t)) . 3439) 3466) nil (26373 20161 524523 27000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2596) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("e" 0 1 (fontified t)) . -2597) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("l" 0 1 (fontified t)) . -2598) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -2599) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("," 0 1 (fontified t)) . -2600) (undo-tree-id673 . -1) 2601 (t 26373 20161 530434 539000)) nil (26373 20292 666916 429000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2596)) nil (26373 20292 666843 522000) 0 nil])
([nil nil ((2596 . 2602) (t 26373 20292 672686 99000)) nil (26373 20303 94075 505000) 0 nil])
([nil nil ((#("from rl_statevalue.Direction import Direction" 0 4 (face py-import-from-face fontified t) 4 29 (fontified t) 29 35 (face py-import-from-face fontified t) 35 45 (fontified t)) . 20) (t 26373 20303 99786 24000)) nil (26375 55872 886686 404000) 0 nil])
([nil nil ((20 . 41)) nil (26375 55872 886685 432000) 0 nil])
([nil current ((41 . 51)) nil (26375 55872 886680 372000) 0 nil])
nil
