(undo-tree-save-format-version . 1)
"ee8d36a3770271de871febc1e929ef8608c08277"
[nil nil nil nil (26363 60292 122523 298000) 0 nil]
([nil nil ((1 . 16) (t 26363 60238 224817 100000)) nil (26363 60292 122522 433000) 0 nil])
([nil nil ((8 . 16) (#("unit" 0 4 (fontified nil)) . -8) (8 . 12) (#("unittest" 0 8 (fontified t)) . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) 16) nil (26363 60292 122521 292000) 0 nil])
([nil nil ((16 . 17)) nil (26363 60292 122518 980000) 0 nil])
([nil nil ((17 . 22)) nil (26363 60292 122518 239000) 0 nil])
([nil nil ((22 . 25)) nil (26363 60292 122517 677000) 0 nil])
([nil nil ((22 . 35) (#("rl_" 0 3 (fontified nil)) . -22) (22 . 25) (#("rl_statevalue" 0 13 (fontified nil)) . -22) (22 . 35) (#("rl_" 0 3 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -22) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) 25) nil (26363 60292 122516 444000) 0 nil])
([nil nil ((35 . 54)) nil (26363 60292 122514 118000) 0 nil])
([nil nil ((49 . 54) (#("Age" 0 3 (fontified nil)) . -49) (49 . 52) (#("Agent" 0 5 (fontified t match-data (0 3 0 1 1 2 2 3))) . -49) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (undo-tree-id3 . -5) 54) nil (26363 60292 122513 161000) 0 nil])
([nil nil ((54 . 56)) nil (26363 60292 122510 733000) 0 nil])
([nil nil ((56 . 59)) nil (26363 60292 122510 321000) 0 nil])
([nil nil ((59 . 79)) nil (26363 60292 122509 699000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -78) (undo-tree-id0 . -1) 79) nil (26363 60292 122508 484000) 0 nil])
([nil nil ((78 . 89)) nil (26363 60292 122489 215000) 0 nil])
([nil nil ((89 . 90)) nil (26363 60292 122488 484000) 0 nil])
([nil nil ((90 . 91)) nil (26363 60292 122487 985000) 0 nil])
([nil nil ((91 . 96)) nil (26363 60292 122487 367000) 0 nil])
([nil nil ((96 . 117)) nil (26363 60292 122486 696000) 0 nil])
([nil nil ((117 . 131)) nil (26363 60292 122485 987000) 0 nil])
([nil nil ((131 . 132)) nil (26363 60292 122485 428000) 0 nil])
([nil nil ((132 . 141)) nil (26363 60292 122484 640000) 0 nil])
([nil nil ((141 . 144)) nil (26363 60292 122483 720000) 0 nil])
([nil nil ((144 . 145)) nil (26363 60292 122479 532000) 0 nil])
([nil nil ((#("class TestAgent(unittest.TestCase):
    def test_agent_initialization(self):
        ..." 0 5 (face py-def-class-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 5 6 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 6 15 (face py-class-name-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 16 33 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 34 36 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 36 40 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 40 43 (face py-def-class-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 43 44 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 44 69 (face py-def-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 70 74 (face py-object-reference-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 75 77 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 77 88 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 56) (undo-tree-id143 . -88) (undo-tree-id144 . -88) (undo-tree-id145 . -88) (undo-tree-id146 . -88) (t 26363 60292 245312 173000)) nil (26363 65480 448189 747000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -35) (undo-tree-id136 . -1) (#("A" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -36) (undo-tree-id137 . -1) (#("g" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -37) (undo-tree-id138 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -38) (undo-tree-id139 . -1) (#("n" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -39) (undo-tree-id140 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -40) (undo-tree-id141 . -1) (#(" " 0 1 (fontified nil)) . 41) (41 . 42) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 41) (undo-tree-id142 . -1) 42) nil (26363 65480 448183 111000) 0 nil])
([nil nil ((35 . 36)) nil (26363 65480 448179 387000) 0 nil])
([nil nil ((48 . 65)) nil (26363 65480 448179 43000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -60) (undo-tree-id131 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -61) (undo-tree-id132 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -62) (undo-tree-id133 . -1) (#("o" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -63) (undo-tree-id134 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -64) (undo-tree-id135 . -1) 65) nil (26363 65480 448178 159000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -56) (undo-tree-id127 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -57) (undo-tree-id128 . -1) (#("r" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -58) (undo-tree-id129 . -1) (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -59) (undo-tree-id130 . -1) 60) nil (26363 65480 448174 758000) 0 nil])
([nil nil ((56 . 69)) nil (26363 65480 448171 646000) 0 nil])
([nil nil ((61 . 76) (#("Di" 0 2 (fontified nil)) . 61) (61 . 63) (#("Direction" 0 9 (fontified nil)) . -61) (61 . 70) (#("Directio" 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -61) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) 69) nil (26363 65480 448170 649000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -56) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("r" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -57) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -58) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("d" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -59) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("." 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -60) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) 61) nil (26363 65480 448166 977000) 0 nil])
([nil nil ((71 . 73)) nil (26363 65480 448160 582000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -56) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("g" 0 1 (fontified t)) . -57) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("e" 0 1 (fontified t)) . -58) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("n" 0 1 (fontified t)) . -59) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("t" 0 1 (fontified t)) . -60) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("." 0 1 (fontified t)) . -61) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("D" 0 1 (fontified t)) . -62) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("i" 0 1 (fontified t)) . -63) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("r" 0 1 (fontified t)) . -64) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("e" 0 1 (fontified t)) . -65) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("c" 0 1 (fontified t)) . -66) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("t" 0 1 (fontified t)) . -67) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("i" 0 1 (fontified t)) . -68) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("o" 0 1 (fontified t)) . -69) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("n" 0 1 (fontified t)) . -70) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 71) nil (26363 65480 448158 489000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 55) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 56) nil (26363 65480 448059 454000) 0 nil])
([nil nil ((55 . 59)) nil (26363 65480 448057 738000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -56) (undo-tree-id73 . -1) (#("F" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -57) (undo-tree-id74 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -58) (undo-tree-id75 . -1) 59) nil (26363 65480 448057 7000) 0 nil])
([nil nil ((56 . 57)) nil (26363 65480 448055 162000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -56) (undo-tree-id72 . -1) 57) nil (26363 65480 448054 631000) 0 nil])
([nil nil ((56 . 65)) nil (26363 65480 448053 476000) 0 nil])
([nil nil ((#("Direction" 0 9 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -56) (undo-tree-id70 . -9) (undo-tree-id71 . -9) 65) nil (26363 65480 448053 63000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 55) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 56) nil (26363 65480 448051 714000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -54) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 55) nil (26363 65480 448050 155000) 0 nil])
([nil nil ((54 . 56)) nil (26363 65480 448046 801000) 0 nil])
([nil nil ((16 . 17)) nil (26363 65480 448046 369000) 0 nil])
([nil nil ((17 . 31)) nil (26363 65480 448045 869000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 30) (undo-tree-id63 . -1) 31) nil (26363 65480 448044 882000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -28) (undo-tree-id61 . -1) (#("y" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -29) (undo-tree-id62 . -1) 30) nil (26363 65480 448042 520000) 0 nil])
([nil nil ((28 . 35)) nil (26363 65480 448040 677000) 0 nil])
([nil nil ((75 . 89)) nil (26363 65480 448040 23000) 0 nil])
([nil nil ((89 . 90)) nil (26363 65480 448039 588000) 0 nil])
([nil nil ((#("class MockGrid:" 0 5 (face py-def-class-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 5 6 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 6 14 (face py-class-name-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 14 15 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 75) (undo-tree-id59 . -5) (undo-tree-id60 . -5)) nil (26363 65480 448039 85000) 0 nil])
([nil nil ((75 . 96)) nil (26363 65480 448037 880000) 0 nil])
([nil nil ((96 . 98)) nil (26363 65480 448037 477000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -97) (undo-tree-id58 . -1) 98) nil (26363 65480 448036 994000) 0 nil])
([nil nil ((97 . 102)) nil (26363 65480 448036 233000) 0 nil])
([nil nil ((100 . 108) (#("te" 0 2 (fontified nil)) . -100) (100 . 102) (#("TestCase" 0 8 (fontified nil)) . -100) (100 . 108) (#("te" 0 2 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -100) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) 102) nil (26363 65480 448035 425000) 0 nil])
([nil nil ((108 . 109)) nil (26363 65480 448033 520000) 0 nil])
([nil nil ((109 . 114)) nil (26363 65480 448033 101000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 2 0 1 1 2))) . -110) (undo-tree-id54 . -4) 114) nil (26363 65480 448032 594000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -109) (undo-tree-id53 . -1) 110) nil (26363 65480 448031 519000) 0 nil])
([nil nil ((109 . 110)) nil (26363 65480 448030 717000) 0 nil])
([nil nil ((110 . 115)) nil (26363 65480 448030 289000) 0 nil])
([nil nil ((115 . 117)) nil (26363 65480 448029 994000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -116) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 117) nil (26363 65480 448029 362000) 0 nil])
([nil nil ((116 . 119)) nil (26363 65480 448027 761000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 2 0 1 1 2))) . 118) (undo-tree-id49 . -1) 119) nil (26363 65480 448027 305000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -117) (undo-tree-id48 . -1) 118) nil (26363 65480 448026 344000) 0 nil])
([nil nil ((117 . 118)) nil (26363 65480 448025 494000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -116) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("e" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -117) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 118) nil (26363 65480 448024 668000) 0 nil])
([nil nil ((116 . 124)) nil (26363 65480 448020 447000) 0 nil])
([nil nil ((124 . 130)) nil (26363 65480 448020 70000) 0 nil])
([nil nil ((130 . 131)) nil (26363 65480 448019 719000) 0 nil])
([nil nil ((131 . 140)) nil (26363 65480 448019 252000) 0 nil])
([nil nil ((140 . 153)) nil (26363 65480 448018 848000) 0 nil])
([nil nil ((153 . 158)) nil (26363 65480 448018 420000) 0 nil])
([nil nil ((158 . 167)) nil (26363 65480 448017 920000) 0 nil])
([nil nil ((#("class TestAgent(unittest.TestCase):
    def setUp(self):
        self.grid_size = 3
        

" 0 5 (face py-def-class-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 5 6 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 6 15 (face py-class-name-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 16 25 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 25 33 (fontified t match-data (0 2 0 1 1 2)) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 34 36 (fontified t match-data (0 2 0 1 1 2)) 36 40 (fontified t match-data (0 2 0 1 1 2)) 40 43 (face py-def-class-face fontified t match-data (0 2 0 1 1 2)) 43 44 (fontified t match-data (0 2 0 1 1 2)) 44 49 (face py-def-face fontified t match-data (0 2 0 1 1 2)) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 50 54 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 55 57 (fontified t match-data (0 2 0 1 1 2)) 57 65 (fontified t match-data (0 2 0 1 1 2)) 65 69 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 69 70 (fontified t match-data (0 2 0 1 1 2)) 70 79 (face py-variable-name-face fontified t match-data (0 2 0 1 1 2)) 79 80 (fontified t match-data (0 2 0 1 1 2)) 80 81 (face font-lock-operator-face fontified t match-data (0 2 0 1 1 2)) 81 82 (fontified t match-data (0 2 0 1 1 2)) 82 83 (face py-number-face fontified t match-data (0 2 0 1 1 2)) 83 92 (fontified t match-data (0 2 0 1 1 2)) 92 93 (fontified t) 93 94 (fontified t)) . 75) (undo-tree-id37 . -73) (undo-tree-id38 . -94) (undo-tree-id39 . 2) (undo-tree-id40 . -94) (undo-tree-id41 . -73)) nil (26363 65480 448017 178000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1934 . 1935) (nil fontified nil 75 . 1935) (75 . 1935)) nil (26363 65480 448014 669000) 0 nil])
([nil nil ((#("Direction" 0 9 (fontified t)) . -1737) (1746 . 1761) (#("Direction" 0 9 (fontified t)) . -1661) (1670 . 1685) 1591) nil (26363 65480 448013 772000) 0 nil])
([nil nil ((#("Direction" 0 9 (fontified t)) . -1779) (1788 . 1803) (#("Direction" 0 9 (fontified t)) . -1697) (1706 . 1721) (#("Direction" 0 9 (fontified t)) . -1262) (1271 . 1286) (#("Direction" 0 9 (fontified t)) . -1181) (1190 . 1205) (#("Direction" 0 9 (fontified t)) . -939) (948 . 963) (#("Direction" 0 9 (fontified t)) . -697) (706 . 721) (#("Direction" 0 9 (fontified t)) . -457) (466 . 481) 74) nil (26363 65480 448012 107000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -1691) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("g" 0 1 (fontified t)) . -1692) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("e" 0 1 (fontified t)) . -1693) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("n" 0 1 (fontified t)) . -1694) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("t" 0 1 (fontified t)) . -1695) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("." 0 1 (fontified t)) . -1696) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 1697) nil (26363 65480 448009 369000) 0 nil])
([nil nil ((#("Agent" 0 5 (fontified t)) . 1767) (undo-tree-id10 . -5)) nil (26363 65480 447996 492000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1767)) nil (26363 65480 447984 555000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -184) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("o" 0 1 (fontified t)) . -185) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("c" 0 1 (fontified t)) . -186) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("k" 0 1 (fontified t)) . -187) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 188 (t 26363 65480 568752 689000)) nil (26363 65533 424720 448000) 0 nil])
([nil nil ((184 . 189)) nil (26363 65533 424713 819000) 0 nil])
([nil nil ((189 . 193) (#("Grid" 0 4 (fontified nil)) . -189) (189 . 193)) nil (26363 65533 424713 194000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t match-data (0 0))) . -189) (undo-tree-id155 . -1) (#("r" 0 1 (fontified t match-data (0 0))) . -190) (undo-tree-id156 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -191) (undo-tree-id157 . -1) (#("d" 0 1 (fontified t match-data (0 0))) . -192) (undo-tree-id158 . -1) 193) nil (26363 65533 424711 996000) 0 nil])
([nil nil ((231 . 237)) nil (26363 65533 424709 509000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -1583) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1584) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 1585) nil (26363 65533 424708 888000) 0 nil])
([nil nil ((#("invalid_directi" 0 15 (face font-lock-string-face fontified t)) . -1568) (undo-tree-id148 . -15) (undo-tree-id149 . -15) (undo-tree-id150 . -15) 1583) nil (26363 65533 424706 382000) 0 nil])
([nil nil ((1568 . 1569)) nil (26363 65533 424703 639000) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-string-face fontified t)) . -1568) (undo-tree-id147 . -1) 1569) nil (26363 65533 424702 192000) 0 nil])
([nil current ((1568 . 1569)) nil (26363 65533 424691 101000) 0 nil])
nil
