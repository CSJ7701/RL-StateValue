(undo-tree-save-format-version . 1)
"759761e699b8b9fbc4bfd4ed6307c3156ae8d2c7"
[nil nil nil nil (26361 49700 167138 590000) 0 nil]
([nil nil ((1 . 14) (t 26361 49650 703860 830000)) nil (26361 49700 167137 838000) 0 nil])
([nil nil ((8 . 16) (#("unit" 0 4 (fontified nil)) . -8) (8 . 12) (#("unittest" 0 8 (fontified nil)) . -8) (8 . 16) (#("unitte" 0 6 (fontified t)) . -8) (undo-tree-id47 . -6) (undo-tree-id48 . -6) (undo-tree-id49 . -6) (undo-tree-id50 . -6) 14) nil (26361 49700 167136 806000) 0 nil])
([nil nil ((16 . 24)) nil (26361 49700 167134 402000) 0 nil])
([nil nil ((24 . 25)) nil (26361 49700 167134 141000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -20) (undo-tree-id42 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -21) (undo-tree-id43 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -22) (undo-tree-id44 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -23) (undo-tree-id45 . -1) (#("
" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -24) (undo-tree-id46 . -1) 25) nil (26361 49700 167132 959000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 19) (undo-tree-id41 . -1) 20) nil (26361 49700 167130 324000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -17) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -18) (undo-tree-id40 . -1) 19) nil (26361 49700 167129 332000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 16) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 17) nil (26361 49700 167127 679000) 0 nil])
([nil nil ((16 . 17)) nil (26361 49700 167126 76000) 0 nil])
([nil nil ((17 . 26)) nil (26361 49700 167125 796000) 0 nil])
([nil nil ((26 . 30) (#("Grid" 0 4 (fontified nil)) . -26) (26 . 30)) nil (26361 49700 167125 385000) 0 nil])
([nil nil ((30 . 42)) nil (26361 49700 167125 24000) 0 nil])
([nil nil ((38 . 42) (#("Gri" 0 3 (fontified nil)) . -38) (38 . 41) (#("Grid" 0 4 (fontified t match-data (0 0))) . -38) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) 42) nil (26361 49700 167124 503000) 0 nil])
([nil nil ((42 . 44)) nil (26361 49700 167122 980000) 0 nil])
([nil nil ((44 . 52)) nil (26361 49700 167122 710000) 0 nil])
([nil nil ((#("t" 0 1 (face py-class-name-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -50) (undo-tree-id25 . -1) (#("e" 0 1 (face py-class-name-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -51) (undo-tree-id26 . -1) 52) nil (26361 49700 167122 149000) 0 nil])
([nil nil ((50 . 58)) nil (26361 49700 167120 586000) 0 nil])
([nil nil ((58 . 63)) nil (26361 49700 167120 65000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -61) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -62) (undo-tree-id24 . -1) 63) nil (26361 49700 167119 414000) 0 nil])
([nil nil ((61 . 63)) nil (26361 49700 167117 320000) 0 nil])
([nil nil ((59 . 67) (#("unit" 0 4 (fontified nil)) . -59) (59 . 63) (#("unittest" 0 8 (fontified nil)) . -59) (59 . 67) (#("unit" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -59) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) 63) nil (26361 49700 167116 498000) 0 nil])
([nil nil ((67 . 72)) nil (26361 49700 167114 504000) 0 nil])
([nil nil ((68 . 76) (#("te" 0 2 (fontified nil)) . -68) (68 . 70) (#("TestCase" 0 8 (fontified nil)) . -68) (68 . 76) (#("test" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -68) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) 72) nil (26361 49700 167113 262000) 0 nil])
([nil nil ((76 . 77)) nil (26361 49700 167110 677000) 0 nil])
([nil nil ((77 . 78)) nil (26361 49700 167110 336000) 0 nil])
([nil nil ((78 . 83)) nil (26361 49700 167109 615000) 0 nil])
([nil nil ((83 . 86)) nil (26361 49700 167109 104000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -83) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -84) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("g" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -85) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 86) nil (26361 49700 167107 681000) 0 nil])
([nil nil ((83 . 84)) nil (26361 49700 167072 545000) 0 nil])
([nil nil ((83 . 104) (t 26361 49700 493444 435000)) nil (26361 49908 592100 715000) 0 nil])
([nil nil ((104 . 107)) nil (26361 49908 592100 54000) 0 nil])
([nil nil ((107 . 117)) nil (26361 49908 592099 323000) 0 nil])
([nil nil ((117 . 118)) nil (26361 49908 592098 681000) 0 nil])
([nil nil ((118 . 127)) nil (26361 49908 592097 920000) 0 nil])
([nil nil ((127 . 135)) nil (26361 49908 592097 359000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 134) (undo-tree-id118 . -1) 135) nil (26361 49908 592096 46000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -131) (undo-tree-id115 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -132) (undo-tree-id116 . -1) (#("m" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -133) (undo-tree-id117 . -1) 134) nil (26361 49908 592094 283000) 0 nil])
([nil nil ((131 . 147)) nil (26361 49908 592092 229000) 0 nil])
([nil nil ((#("2" 0 1 (face py-number-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -146) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 147) nil (26361 49908 592091 528000) 0 nil])
([nil nil ((146 . 149)) nil (26361 49908 592090 746000) 0 nil])
([nil nil ((149 . 150)) nil (26361 49908 592090 526000) 0 nil])
([nil nil ((150 . 163)) nil (26361 49908 592090 225000) 0 nil])
([nil nil ((163 . 175)) nil (26361 49908 592089 945000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -173) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -174) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 175) nil (26361 49908 592089 364000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -172) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 173) nil (26361 49908 592085 867000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -170) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("G" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -171) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 172) nil (26361 49908 592083 583000) 0 nil])
([nil nil ((170 . 179)) nil (26361 49908 591967 935000) 0 nil])
([nil nil ((179 . 192)) nil (26361 49908 591967 444000) 0 nil])
([nil nil ((192 . 213)) nil (26361 49908 591967 13000) 0 nil])
([nil nil ((213 . 219)) nil (26361 49908 591966 422000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -219) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 220) nil (26361 49908 591965 821000) 0 nil])
([nil nil ((219 . 220)) nil (26361 49908 591964 157000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -219) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 220) nil (26361 49908 591963 276000) 0 nil])
([nil nil ((219 . 220)) nil (26361 49908 591961 282000) 0 nil])
([nil nil ((214 . 223) (#("DI" 0 2 (fontified nil)) . -214) (214 . 216) (#("DIMENSION" 0 9 (fontified nil)) . -214) (214 . 223) (#("DIMENS" 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -214) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) 220) nil (26361 49908 591960 160000) 0 nil])
([nil nil ((223 . 229)) nil (26361 49908 591957 976000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -228) (undo-tree-id81 . -1) 229) nil (26361 49908 591957 495000) 0 nil])
([nil nil ((228 . 229)) nil (26361 49908 591956 563000) 0 nil])
([nil nil ((229 . 242)) nil (26361 49908 591956 222000) 0 nil])
([nil nil ((242 . 252)) nil (26361 49908 591955 681000) 0 nil])
([nil nil ((247 . 253) (#("asser" 0 5 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -247) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) 252) nil (26361 49908 591954 890000) 0 nil])
([nil nil ((253 . 254)) nil (26361 49908 591952 726000) 0 nil])
([nil nil ((247 . 258) (#("assertE" 0 7 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5) lsp-completion-prefix "as" lsp-completion-markers (247 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 247 lsp-sort-text "09.9999.assertAlmostEqual" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertAlmostEqual" 0 17 (match-data (0 17 0 1 1 2 2 3 3 4 4 5 5 6 12 13 13 14 14 15 15 16 16 17))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 8 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertAlmostEqual")) "sortText" "09.9999.assertAlmostEqual" "_emacsStartPoint" 247)))) . -247) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (undo-tree-id76 . -7) 254) nil (26361 49908 591951 804000) 0 nil])
([nil nil ((258 . 269)) nil (26361 49908 591950 11000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7) lsp-completion-prefix "as" lsp-completion-markers (247 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 247 lsp-sort-text "09.9999.assertEqual" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertEqual" 0 11 (match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 8 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertEqual")) "sortText" "09.9999.assertEqual" "_emacsStartPoint" 247)))) . -267) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7) lsp-completion-prefix "as" lsp-completion-markers (247 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 247 lsp-sort-text "09.9999.assertEqual" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertEqual" 0 11 (match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 8 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertEqual")) "sortText" "09.9999.assertEqual" "_emacsStartPoint" 247)))) . -268) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 269) nil (26361 49908 591949 129000) 0 nil])
([nil nil ((267 . 287)) nil (26361 49908 591947 145000) 0 nil])
([nil nil ((287 . 289)) nil (26361 49908 591946 735000) 0 nil])
([nil nil ((289 . 302)) nil (26361 49908 591946 314000) 0 nil])
([nil nil ((302 . 316)) nil (26361 49908 591945 773000) 0 nil])
([nil nil ((307 . 318) (#("assertEqu" 0 9 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7) lsp-completion-prefix "as" lsp-completion-markers (247 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 247 lsp-sort-text "09.9999.assertEqual" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertEqual" 0 11 (match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 8 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertEqual")) "sortText" "09.9999.assertEqual" "_emacsStartPoint" 247)))) . -307) (undo-tree-id65 . -9) (undo-tree-id66 . -9) (undo-tree-id67 . -9) (undo-tree-id68 . -9) 316) nil (26361 49908 591945 111000) 0 nil])
([nil nil ((318 . 325)) nil (26361 49908 591941 324000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9) lsp-completion-prefix "as" lsp-completion-markers (307 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 307 lsp-sort-text "09.9999.assertEqual" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertEqual" 0 11 (match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 9 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertEqual")) "sortText" "09.9999.assertEqual" "_emacsStartPoint" 307)))) . -324) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 325) nil (26361 49908 591940 573000) 0 nil])
([nil nil ((324 . 329)) nil (26361 49908 591937 367000) 0 nil])
([nil nil ((329 . 349)) nil (26361 49908 591936 465000) 0 nil])
([nil nil ((349 . 362)) nil (26361 49908 591935 674000) 0 nil])
([nil nil ((362 . 375)) nil (26361 49908 591935 83000) 0 nil])
([nil nil ((367 . 377) (#("assertTr" 0 8 (fontified t match-data (0 9 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9) lsp-completion-prefix "as" lsp-completion-markers (307 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 307 lsp-sort-text "09.9999.assertEqual" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertEqual" 0 11 (match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 9 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertEqual")) "sortText" "09.9999.assertEqual" "_emacsStartPoint" 307)))) . -367) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) 375) nil (26361 49908 591934 361000) 0 nil])
([nil nil ((377 . 378)) nil (26361 49908 591932 438000) 0 nil])
([nil nil ((378 . 395)) nil (26361 49908 591932 117000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . -393) (undo-tree-id55 . -1) (#("r" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . -394) (undo-tree-id56 . -1) 395) nil (26361 49908 591931 526000) 0 nil])
([nil nil ((393 . 403)) nil (26361 49908 591930 223000) 0 nil])
([nil nil ((403 . 416)) nil (26361 49908 591929 652000) 0 nil])
([nil nil ((416 . 420)) nil (26361 49908 591929 161000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . -419) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 420) nil (26361 49908 591928 420000) 0 nil])
([nil nil ((419 . 420)) nil (26361 49908 591918 471000) 0 nil])
([nil nil ((16 . 17)) nil (26361 49908 591917 840000) 0 nil])
([nil nil ((17 . 35)) nil (26361 49908 591917 459000) 0 nil])
([nil nil ((439 . 458)) nil (26361 49908 591917 179000) 0 nil])
([nil nil ((458 . 476)) nil (26361 49908 591916 768000) 0 nil])
([nil nil ((476 . 477)) nil (26361 49908 591912 831000) 0 nil])
([nil nil ((478 . 490) (#("            " 0 12 (fontified nil match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . 477) (undo-tree-id186 . -12) (476 . 490) (t 26361 49908 594890 312000)) nil (26361 50035 776626 227000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . 486) (undo-tree-id185 . -4) 490) nil (26361 50035 776625 345000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . 482) (undo-tree-id184 . -4) 486) nil (26361 50035 776624 574000) 0 nil])
([nil nil ((482 . 489)) nil (26361 50035 776623 982000) 0 nil])
([nil nil ((489 . 492)) nil (26361 50035 776623 742000) 0 nil])
([nil nil ((#("s" 0 1 (face py-def-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . -491) (undo-tree-id183 . -1) 492) nil (26361 50035 776623 61000) 0 nil])
([nil nil ((491 . 495)) nil (26361 50035 776621 899000) 0 nil])
([nil nil ((495 . 511)) nil (26361 50035 776621 598000) 0 nil])
([nil nil ((511 . 512)) nil (26361 50035 776621 368000) 0 nil])
([nil nil ((512 . 521)) nil (26361 50035 776621 217000) 0 nil])
([nil nil ((521 . 532)) nil (26361 50035 776620 636000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . -531) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 532) nil (26361 50035 776620 115000) 0 nil])
([nil nil ((531 . 535)) nil (26361 50035 776618 422000) 0 nil])
([nil nil ((535 . 544)) nil (26361 50035 776618 21000) 0 nil])
([nil nil ((544 . 554)) nil (26361 50035 776617 771000) 0 nil])
([nil nil ((549 . 560) (#("as" 0 2 (fontified nil)) . -549) (549 . 551) (#("assertEqual" 0 11 (fontified nil)) . -549) (549 . 560) (#("asser" 0 5 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8) lsp-completion-prefix "as" lsp-completion-markers (367 #<marker (moves after insertion) in no buffer>) lsp-completion-start-point 367 lsp-sort-text "09.9999.assertTrue" lsp-completion-item #s(hash-table size 6 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("label" #("assertTrue" 0 10 (match-data (0 10 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10))) "kind" 2 "data" #s(hash-table size 4 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("uri" "file:///home/csj7701/Projects/RL-StateValue/tests/test_grid.py" "position" #s(hash-table size 2 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("line" 10 "character" 19)) "funcParensDisabled" t "symbolLabel" "assertTrue")) "sortText" "09.9999.assertTrue" "_emacsStartPoint" 367)))) . -549) (undo-tree-id175 . -5) (undo-tree-id176 . -5) (undo-tree-id177 . -5) (undo-tree-id178 . -5) 554) nil (26361 50035 776616 999000) 0 nil])
([nil nil ((560 . 568)) nil (26361 50035 776615 577000) 0 nil])
([nil nil ((566 . 575) (#("Di" 0 2 (fontified nil)) . -566) (566 . 568) (#("DIMENSION" 0 9 (fontified nil)) . -566) (566 . 575) (#("Di" 0 2 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -566) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) 568) nil (26361 50035 776614 905000) 0 nil])
([nil nil ((575 . 579)) nil (26361 50035 776612 902000) 0 nil])
([nil nil ((579 . 588)) nil (26361 50035 776612 180000) 0 nil])
([nil nil ((588 . 593)) nil (26361 50035 776611 479000) 0 nil])
([nil nil ((593 . 604) (#("assertEqual" 0 11 (fontified nil)) . -593) (593 . 604)) nil (26361 50035 776610 898000) 0 nil])
([nil nil ((604 . 613)) nil (26361 50035 776610 567000) 0 nil])
([nil nil ((610 . 616) (#("coo" 0 3 (fontified nil)) . -610) (610 . 613) (#("coords" 0 6 (fontified nil)) . -610) (610 . 616) (#("coo" 0 3 (fontified t match-data (0 0))) . -610) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) 613) nil (26361 50035 776609 916000) 0 nil])
([nil nil ((616 . 622)) nil (26361 50035 776608 303000) 0 nil])
([nil nil ((622 . 630)) nil (26361 50035 776608 42000) 0 nil])
([nil nil ((630 . 639)) nil (26361 50035 776607 622000) 0 nil])
([nil nil ((639 . 646)) nil (26361 50035 776607 361000) 0 nil])
([nil nil ((644 . 651) (#("ad" 0 2 (fontified nil)) . -644) (644 . 646) (#("maxDiff" 0 7 (fontified nil)) . -644) (644 . 651) (#("ad" 0 2 (fontified t match-data (0 3 0 1 1 2 2 3))) . -644) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) 646) nil (26361 50035 776606 339000) 0 nil])
([nil nil ((651 . 652)) nil (26361 50035 776604 496000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t match-data (1 4 1 2 3 4))) . -644) (undo-tree-id155 . -1) (#("a" 0 1 (fontified t match-data (1 4 1 2 3 4))) . -645) (undo-tree-id156 . -1) (#("x" 0 1 (fontified nil match-data (1 4 1 2 3 4))) . -646) (undo-tree-id157 . -1) (#("D" 0 1 (fontified t match-data (1 4 1 2 3 4))) . -647) (undo-tree-id158 . -1) (#("i" 0 1 (fontified t match-data (1 4 1 2 3 4))) . -648) (undo-tree-id159 . -1) (#("f" 0 1 (fontified t match-data (1 4 1 2 3 4))) . -649) (undo-tree-id160 . -1) (#("f" 0 1 (fontified t match-data (1 4 1 2 3 4))) . -650) (undo-tree-id161 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (1 4 1 2 3 4))) . -651) (undo-tree-id162 . -1) 652) nil (26361 50035 776602 833000) 0 nil])
([nil nil ((644 . 647)) nil (26361 50035 776598 244000) 0 nil])
([nil nil ((644 . 655) (#("ass" 0 3 (fontified nil)) . -644) (644 . 647) (#("assertEqual" 0 11 (fontified nil)) . -644) (644 . 655) (#("ass" 0 3 (fontified t match-data (0 3 0 1 1 2 2 3))) . -644) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) 647) nil (26361 50035 776596 851000) 0 nil])
([nil nil ((655 . 668)) nil (26361 50035 776593 846000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -667) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 668) nil (26361 50035 776593 14000) 0 nil])
([nil nil ((667 . 681)) nil (26361 50035 776591 40000) 0 nil])
([nil nil ((683 . 691) (#("        " 0 8 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 682) (undo-tree-id148 . -8) (681 . 691)) nil (26361 50035 776589 918000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . 687) (undo-tree-id147 . -4) 691) nil (26361 50035 776588 295000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . -683) (undo-tree-id146 . -4) 687) nil (26361 50035 776586 812000) 0 nil])
([nil nil ((683 . 691)) nil (26361 50035 776585 59000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . 687) (undo-tree-id145 . -4) 691) nil (26361 50035 776584 47000) 0 nil])
([nil nil ((687 . 688)) nil (26361 50035 776198 319000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -687) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) 688) nil (26361 50035 776197 758000) 0 nil])
([nil nil ((687 . 699)) nil (26361 50035 776194 612000) 0 nil])
([nil nil ((699 . 720)) nil (26361 50035 776193 971000) 0 nil])
([nil nil ((720 . 721)) nil (26361 50035 776193 720000) 0 nil])
([nil nil ((721 . 730)) nil (26361 50035 776193 129000) 0 nil])
([nil nil ((730 . 750)) nil (26361 50035 776192 849000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -748) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -749) (undo-tree-id140 . -1) 750) nil (26361 50035 776192 278000) 0 nil])
([nil nil ((748 . 764)) nil (26361 50035 776190 114000) 0 nil])
([nil nil ((764 . 777)) nil (26361 50035 776189 793000) 0 nil])
([nil nil ((764 . 765)) nil (26361 50035 776189 542000) 0 nil])
([nil nil ((765 . 778)) nil (26361 50035 776189 282000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 778) (#("
" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 778)) nil (26361 50035 776188 500000) 0 nil])
([nil nil ((#("           
" 0 11 (fontified t match-data (0 3 0 1 1 2 2 3)) 11 12 (fontified t)) . 778)) nil (26361 50035 776187 869000) 0 nil])
([nil nil ((778 . 786)) nil (26361 50035 776187 438000) 0 nil])
([nil nil ((788 . 800) (#("            " 0 12 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 787) (undo-tree-id135 . -12) (786 . 800)) nil (26361 50035 776187 118000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . 796) (undo-tree-id134 . -4) 800) nil (26361 50035 776186 306000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . 792) (undo-tree-id133 . -4) 796) nil (26361 50035 776185 405000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . -788) (undo-tree-id132 . -4) 792) nil (26361 50035 776184 453000) 0 nil])
([nil nil ((788 . 805)) nil (26361 50035 776183 772000) 0 nil])
([nil nil ((#("_" 0 1 (face py-builtins-face fontified t match-data (0 3 0 1 1 2 2 3))) . -803) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("_" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -804) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 805) nil (26361 50035 776183 291000) 0 nil])
([nil nil ((803 . 804)) nil (26361 50035 776179 784000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -803) (undo-tree-id123 . -1) 804) nil (26361 50035 776179 373000) 0 nil])
([nil nil ((803 . 813)) nil (26361 50035 776178 502000) 0 nil])
([nil nil ((813 . 814)) nil (26361 50035 776178 241000) 0 nil])
([nil nil ((814 . 819)) nil (26361 50035 776177 971000) 0 nil])
([nil nil ((819 . 824)) nil (26361 50035 776177 680000) 0 nil])
([nil nil ((819 . 827) (#("uni" 0 3 (fontified nil)) . -819) (819 . 822) (#("unittest" 0 8 (fontified nil)) . -819) (819 . 827) (#("unitt" 0 5 (fontified t match-data (0 3 0 1 1 2 2 3))) . -819) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) 824) nil (26361 50035 776176 37000) 0 nil])
([nil nil ((827 . 834)) nil (26361 50035 776165 46000) 0 nil])
([nil current ((834 . 835)) nil (26361 50035 776160 868000) 0 nil])
nil
